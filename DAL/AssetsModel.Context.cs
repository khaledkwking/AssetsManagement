

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DAL
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class GPFAssetsEntities : DbContext
{
    public GPFAssetsEntities()
        : base("name=GPFAssetsEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Building_tbl> Building_tbl { get; set; }

    public virtual DbSet<Floor_tbl> Floor_tbl { get; set; }

    public virtual DbSet<Unit_tbl> Unit_tbl { get; set; }

    public virtual DbSet<Category_tbl> Category_tbl { get; set; }

    public virtual DbSet<Suppliers_tbl> Suppliers_tbl { get; set; }

    public virtual DbSet<Status> Status { get; set; }

    public virtual DbSet<Room_tbl> Room_tbl { get; set; }

    public virtual DbSet<Emp_rooms> Emp_rooms { get; set; }

    public virtual DbSet<OutOrders> OutOrders { get; set; }

    public virtual DbSet<InOrders> InOrders { get; set; }

    public virtual DbSet<DestroyOrders> DestroyOrders { get; set; }

    public virtual DbSet<HandoverOrders> HandoverOrders { get; set; }

    public virtual DbSet<tbLookups> tbLookups { get; set; }

    public virtual DbSet<HandOverOrdersDetails> HandOverOrdersDetails { get; set; }

    public virtual DbSet<DestroyOrdersDetails> DestroyOrdersDetails { get; set; }

    public virtual DbSet<TransferOrders> TransferOrders { get; set; }

    public virtual DbSet<TransferOrdersDetails> TransferOrdersDetails { get; set; }

    public virtual DbSet<ChangeQuantityOrders> ChangeQuantityOrders { get; set; }

    public virtual DbSet<ChangeQuantityOrdersDetails> ChangeQuantityOrdersDetails { get; set; }

    public virtual DbSet<ReturnOutOrders> ReturnOutOrders { get; set; }

    public virtual DbSet<ReturnOutOrdersDetails> ReturnOutOrdersDetails { get; set; }

    public virtual DbSet<ReturnInOrders> ReturnInOrders { get; set; }

    public virtual DbSet<ReturnInOrdersDetails> ReturnInOrdersDetails { get; set; }

    public virtual DbSet<tbUsers> tbUsers { get; set; }

    public virtual DbSet<tbUsersPages> tbUsersPages { get; set; }

    public virtual DbSet<tbUsersRoles> tbUsersRoles { get; set; }

    public virtual DbSet<tbSystemPages> tbSystemPages { get; set; }

    public virtual DbSet<vwInOrderDetails> vwInOrderDetails { get; set; }

    public virtual DbSet<vwOutOrderDetails> vwOutOrderDetails { get; set; }

    public virtual DbSet<vwReturnInOrdersDetails> vwReturnInOrdersDetails { get; set; }

    public virtual DbSet<vwReturnOutOrdersDetails> vwReturnOutOrdersDetails { get; set; }

    public virtual DbSet<vwChangeQuantityOrdersDetails> vwChangeQuantityOrdersDetails { get; set; }

    public virtual DbSet<vwDestroyOrdersDetails> vwDestroyOrdersDetails { get; set; }

    public virtual DbSet<vwHandOverOrdersDetails> vwHandOverOrdersDetails { get; set; }

    public virtual DbSet<vwTransferOrdersDetails> vwTransferOrdersDetails { get; set; }

    public virtual DbSet<tbUsersStores> tbUsersStores { get; set; }

    public virtual DbSet<vwItemsStock> vwItemsStock { get; set; }

    public virtual DbSet<vwEmpRooms> vwEmpRooms { get; set; }

    public virtual DbSet<Vendor_Contracts> Vendor_Contracts { get; set; }

    public virtual DbSet<TransferAssets> TransferAssets { get; set; }

    public virtual DbSet<TransferAssetsDetails> TransferAssetsDetails { get; set; }

    public virtual DbSet<vwTransferAssests> vwTransferAssests { get; set; }

    public virtual DbSet<tbl_ItemsStockDetails> tbl_ItemsStockDetails { get; set; }

    public virtual DbSet<InOrdersDetails> InOrdersDetails { get; set; }

    public virtual DbSet<CatSub_tbl> CatSub_tbl { get; set; }

    public virtual DbSet<OutOrdersDetails> OutOrdersDetails { get; set; }

    public virtual DbSet<tbl_Setup> tbl_Setup { get; set; }

    public virtual DbSet<vwAllOrders> vwAllOrders { get; set; }

    public virtual DbSet<Vendors> Vendors { get; set; }

    public virtual DbSet<tbl_ItemsStock> tbl_ItemsStock { get; set; }

    public virtual DbSet<CatMain_tbl> CatMain_tbl { get; set; }

    public virtual DbSet<tbUsersMainCats> tbUsersMainCats { get; set; }

    public virtual DbSet<RequestOutOrders> RequestOutOrders { get; set; }

    public virtual DbSet<RequestStatus> RequestStatus { get; set; }

    public virtual DbSet<tbUsersDepts> tbUsersDepts { get; set; }

    public virtual DbSet<RequestOrdersDetails> RequestOrdersDetails { get; set; }

    public virtual DbSet<Item_tbl> Item_tbl { get; set; }


    public virtual int SpLog_DataDML(string actionCode, Nullable<int> id, string actionType, Nullable<int> actionUserId)
    {

        var actionCodeParameter = actionCode != null ?
            new ObjectParameter("ActionCode", actionCode) :
            new ObjectParameter("ActionCode", typeof(string));


        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var actionTypeParameter = actionType != null ?
            new ObjectParameter("ActionType", actionType) :
            new ObjectParameter("ActionType", typeof(string));


        var actionUserIdParameter = actionUserId.HasValue ?
            new ObjectParameter("ActionUserId", actionUserId) :
            new ObjectParameter("ActionUserId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpLog_DataDML", actionCodeParameter, idParameter, actionTypeParameter, actionUserIdParameter);
    }

}

}

