
@model BOL.InOrdersDetialsViewModel
@using PagedList.Mvc;
@using PagedList;

@{ ViewBag.Title = @Html.Raw(Resources.DefaultResource.InOrders); }


<div id="EditModal" class="modal-content">
    <div class="modal-header">

        <span class="kt-portlet__head-icon">
            <i class="kt-font-brand flaticon2-checking"></i>
        </span>
        <h3 class="modal-title" id="exampleModalLabel">
            @Html.Raw(Resources.DefaultResource.InOrders)
        </h3>
        <button type="button" class="close" data-dismiss="modal" onclick="CheckChecked();" aria-label="Close">
            <span class="fa fa-close"></span>
        </button>

    </div>
    <div class="modal-body">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__body">
                @*<div class="table-responsive">*@
                <div class="row">
                    <div class="col-sm-6 pull-right">
                        <nav class="navbar buttonsNavBar">
                            <div class="container-fluid">
                                <ul class="nav nav-pills">
                                    <li id="Li1" class="active pull-right">
                                        <button type="button" id="CmdClose" onclick="CheckChecked();" value="@Html.Raw(Resources.DefaultResource.Cancel)" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.Cancel)" data-dismiss="modal">@Html.Raw(Resources.DefaultResource.Cancel)</button>
                                    </li>
                                    <text>&nbsp;</text>
                                </ul>
                            </div>
                        </nav>
                    </div>
                </div>

                @if (Model != null)
                {
    <table id="Outshowtable" class="table table-striped table-bordered table-hover table-checkable">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.Raw(Resources.DefaultResource.No)
                    @*@Html.ActionLink(Resources.DefaultResource.No, "OutOrderModal", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })*@
                </th>

                <th>
                    @Html.Raw(Resources.DefaultResource.TitleAr)
                    @*@Html.ActionLink(Resources.DefaultResource.TitleAr, "OutOrderModal", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })*@
                </th>


                <th>
                    @*@Html.ActionLink(Resources.DefaultResource.SerialOrBarcode, "OutOrderModal", new { Sorting_Order = ViewBag.SortingModel, Filter_Value = ViewBag.FilterValue })*@
                    @Html.Raw(Resources.DefaultResource.RFID)
                </th>
                <th>
                    @Html.Raw(Resources.DefaultResource.Barcode)
                    @*@Html.ActionLink(Resources.DefaultResource.Barcode, "OutOrderModal", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })*@
                </th>
                <th>
                    @Html.Raw(Resources.DefaultResource.InQty)
                    @*@Html.ActionLink(Resources.DefaultResource.InQty, "OutOrderModal", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })*@
                </th>
                <th>
                    @Html.Raw(Resources.DefaultResource.Actions)
                    @*@Html.ActionLink(Resources.DefaultResource.OutQuantity, "OutOrderModal", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })*@
                </th>

            </tr>
        </thead>


        @foreach (var item in Model.InOrdersDetails)
        {

    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StockId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.tbl_ItemsStock.Item_tbl.Item_Name)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Item_RFID)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Item_BarCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Qty)
        </td>

        <td>
            <a href='@Url.Action("PrintBarcode", "Reports", new { InOrderDetId = @item.InOrderDetId})' class="btn btn-sm btn-icon btn-outline-primary btn-icon-md" id="Printbtn" target="_blank" data-toggle="kt-tooltip" title="@Html.Raw(Resources.DefaultResource.Print)">
                <i class="fa fa-print"></i>
            </a>
            @*<a href='@Url.Action("ShowBarcodeReport", "Reports", new { InOrderDetId = @item.InOrderDetId})' class="btn btn-sm btn-icon btn-outline-primary btn-icon-md" id="Printbtn" target="_blank" data-toggle="kt-tooltip" title="@Html.Raw(Resources.DefaultResource.Print)">
                <i class="fa fa-print"></i>
            </a>*@
        </td>
    </tr>
}

    </table> } @*</div>*@ @*</div>*@
            </div>

        </div>

    </div>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        function CheckChecked() {
            $('#showmodal').modal('hide');

        }

        var form = $("#myform")
            .removeData("validator")
            .removeData("unobtrusiveValidation");

        $.validator.unobtrusive.parse(form);

    </script>



</div>



