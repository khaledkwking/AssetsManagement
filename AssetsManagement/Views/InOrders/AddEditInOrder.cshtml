@*@using  MultipleModelInOneView;*@

@model BOL.InOrdersViewModel

@using PagedList.Mvc;
@using PagedList;
@using System.Configuration;

@{ //ViewBag.Title = @Html.Raw(Resources.DefaultResource.Rooms);
    Layout = "~/Views/Shared/_Layout.cshtml"; }
@*<h2>CarList</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<div class="kt-subheader   kt-grid__item" id="kt_subheader">
    <div class="kt-subheader__main">
        <h3 class="kt-subheader__title">
            @Html.Raw(Resources.DefaultResource.YOUAREHERE):

        </h3>
        <span class="kt-subheader__separator kt-hidden"></span>
        <div class="kt-subheader__breadcrumbs">

            <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-shelter"></i></a>
            <span class="kt-subheader__breadcrumbs-separator"></span>

            <a href="/Home/Index" class="kt-subheader__breadcrumbs-link">
                @Html.Raw(Resources.DefaultResource.Dashboard)
            </a>

            @*Url.Action("ItemsStockList", new { Page_No, EmpId = @ViewBag.EmpId,  Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })*@
            @if (@ViewBag.EmpId != null)
            {
<span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("Employees", "HR", new { EmpId = @ViewBag.EmpId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.EmpName as string)
                </a>}

        </div>
    </div>
</div>
@using (Html.BeginForm("AddEditInOrder", "InOrders", FormMethod.Post, htmlAttributes: new { id = "myform", name = "myform", enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken();
<div class="kt-content  kt-grid__item kt-grid__item--fluid" id="kt_content">
    @* First source items *@
    <div class="row">

        <div class="col-6">
            <div class="kt-portlet kt-portlet--mobile">
                <div class="kt-portlet__head kt-portlet__head--lg">
                    <div class="kt-portlet__head-label">
                        <span class="kt-portlet__head-icon">
                            <i class="kt-font-brand flaticon2-checking"></i>
                        </span>
                        <h3 class="kt-portlet__head-title">
                            @Html.Raw(Resources.DefaultResource.SupplyVoucherData)

                        </h3>

                    </div>
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">

                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="Addbtn"
                                        onclick="location.href='@Url.Action("AddEditInOrder", "InOrders",new {Id=""})'">

                                    <i class="la la-plus"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.ClearItems)
                                    </span>
                                </button>
                                &nbsp;
                                <button name="CmdSave" type="submit" id="CmdSave" value="CmdSave" class="btn btn-success" formmethod="post" ValidationGroup="DML">
                                    <i class="fas fa-save"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.Save)
                                    </span>
                                </button>
                                @*<input id="CmdSave" value="@Html.Raw(Resources.DefaultResource.Save )" name="CmdSave" type="submit" onclick="OnSubmit()" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.TransferAsset)" data-toggle="@Html.Raw(Resources.DefaultResource.TransferAsset)" formaction="/Inventory/AssetItemsList" formmethod="post" ValidationGroup="DML" />*@
                            </div>
                        </div>

                    </div>

                </div>
                <div class="table-responsive" style="min-height:900px">
                    <div class="kt-portlet__body">
                        @Html.HiddenFor(m => m.DisplayMode, new { @class = "form-control hidden", id = "DisplayMode", name = "DisplayMode" })

                        @Html.HiddenFor(m => m.PostFlag, new { @class = "hidden", id = "PostFlag", name = "PostFlag" })

                        @Html.HiddenFor(m => m.SelectedItem.PictureName)
                        @Html.HiddenFor(m => m.SelectedItem.IsLock)
                        @*<form method="post" id="ChangeEvent">*@
                        @*@Html.RadioButton("A1", "1", ViewData["IsSelected"] == "1", new { onclick = "document.getElementById('ChangeEvent').submit();" })*@
                        @*</form>*@

                        @*start of part of drowdawn lists*@
                        <div id="dropDownListdiv">
                            <div class="form-group row text-center">
                                @Html.Label("", Resources.DefaultResource.SearchBy, htmlAttributes: new { @class = "control-label col-4 HeadMenuItem" })

                                <div class="col-6">
                                    @Html.RadioButtonFor(m => m.SelectedItem.TransferFlag, "1", new { @class = "HeadMenuItem", onclick = " document.myform.submit();" })
                                    @Html.Label("FromSupplier", Resources.DefaultResource.FromSupplier, new { @class = "HeadMenuItem" })


                                </div>


                                <div class="col-2">
                                </div>
                            </div>
                            <div class="form-group row ">

                                @Html.Label("lblInOrderId", Resources.DefaultResource.VoucherNum, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.SelectedItem.InOrderId, new { @class = "form-control", @readonly = "true" })
                                </div>

                                @Html.Label("lblStoreId_From", Model.SelectedItem.TransferFlag == 1 ? Resources.DefaultResource.FromSupplier : Resources.DefaultResource.FromInventory, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblStoreOrder" })
                                @*<div class="col-4" style="display:@(Model.SelectedItem.TransferFlag == 2 ? "normal" : "none")">
                @Html.DropDownListFor(m => m.SelectedItem.StoreId_From, Model.FromStores, Resources.DefaultResource.ListChoose, new { @class = "select-chosen", id = "StoreId", name = "StoreId" })

            </div>*@

                                @*@Html.Label("lblSupplierId", Resources.DefaultResource.FromSupplier, new { @class = "col-2 col-form-label HeadMenuItem" })*@
                                <div class="col-4" style="display:@(Model.SelectedItem.TransferFlag == 1 ? "normal" : "none")">
                                    @Html.DropDownListFor(m => m.SelectedItem.SupplierId_From, Model.Suppliers, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", id = "SupplierId_From", style = "width:100%;", name = "SupplierId_From" })
                                    @Html.ValidationMessageFor(m => m.SelectedItem.SupplierId_From, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })
                                </div>

                            </div>


                            <div class="form-group row mt-5 ">
                                @Html.Label("lblOutOrderDate", Resources.DefaultResource.VoucherDate, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblOutOrderDate" })
                                <div class="col-4">

                                    @{ string ExpiredDate = "";
                                        if (Model.SelectedItem.InOrderDate == null)
                                        {
                                            //ExpiredDate =;
                                        }
                                        else
                                        {
                                            ExpiredDate = Model.SelectedItem.InOrderDate.Value.ToString("dd/MM/yyyy");
                                        } }
                                    <input type="text" name="SelectedItem.InOrderDate" value="@ExpiredDate" class="form-control date-picker" AutoComplete="Off" data-date-format="dd/mm/yyyy" id="SelectedItem.InOrderDate" required />
                                    @Html.ValidationMessageFor(m => m.SelectedItem.InOrderDate, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })

                                </div>

                                @Html.Label("lblToStoreId", Resources.DefaultResource.ToInventory, new { @class = "col-2 col-form-label HeadMenuItem" })

                                <div class="col-4" style="@(Model.EditMode == "Edit" ? "pointer-events:none" : "")">
                                    @Html.DropDownListFor(m => m.SelectedItem.StoreId_To, Model.ToStores, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "StoreId_To", name = "StoreId_To" })
                                    @Html.ValidationMessageFor(m => m.SelectedItem.StoreId_To, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })

                                    @Html.HiddenFor(m => m.EditMode)
                                </div>




                            </div>

                            <div class="form-group row ">

                                @Html.Label("lblPurchaseNo", Resources.DefaultResource.PurchaseNo, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.SelectedItem.PurchaseNo, new { @class = "form-control" })
                                </div>
                                @Html.Label("lblContractName", Resources.DefaultResource.ContractName, new { @class = "col-2 col-form-label HeadMenuItem" })
                                <div class="col-4">

                                    @Html.DropDownListFor(m => m.SelectedItem.ContractId, Model.Contracts, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "ContractId", name = "ContractId" })

                                </div>
                            </div>

                            <div class="form-group row">

                                @Html.Label("lblPaymentNo", Resources.DefaultResource.PaymentNo, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.SelectedItem.PaymentNo, new { @class = "form-control" })
                                </div>
                                @Html.Label("lblPaymentDate", Resources.DefaultResource.PaymentDate, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblOutOrderDate" })
                                <div class="col-4">

                                    @{ string PaymentDate = "";
                                        if (Model.SelectedItem.PaymentDate == null)
                                        {
                                        }
                                        else
                                        {
                                            PaymentDate = Model.SelectedItem.PaymentDate.Value.ToString("dd/MM/yyyy");
                                        } }
                                    <input type="text" name="SelectedItem.PaymentDate" value="@PaymentDate" class="form-control date-picker" AutoComplete="Off" data-date-format="dd/mm/yyyy" />

                                </div>
                            </div>
                            <div class="form-group row">


                                @Html.Label("OutOrder", Resources.DefaultResource.InvoiceAmount, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.SelectedItem.InvoiceAmount, new { @class = "form-control" })
                                </div>
                                @Html.Label("OutOrder", Resources.DefaultResource.Notes, new { @class = "col-1 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-5">
                                    @Html.TextAreaFor(m => m.SelectedItem.Remarks, 2, 55, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.SelectedItem.Remarks, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group row">

                                @Html.Label("lblNotesOrder", Resources.DefaultResource.NotesOther, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblNotesOrder" })
                                <div class="col-10">
                                    @Html.TextAreaFor(m => m.SelectedItem.Notes, 2, 55, new { @class = "form-control" })
                                </div>

                            </div>
                            <div class="form-group row" style="border:solid; border-width :1px; padding:15px;">

                                @*<div class="col-4 pull-right">
                <input type="file" name="postedFile" id="postedFile" onchange="fileCheck(this);" />

            </div>*@
                                @Html.Label("FileName", Resources.DefaultResource.AttachmentFile, new { @class = "col-2 col-form-label HeadMenuItem" })
                                <div class="col-5 pull-right">
                                    <input type="file" name="postedFile" id="postedFile" onchange="fileCheck(this);" class="" />
                                </div>
                                <div class="col-3">
                                    <button id="CmdUpload" name="CmdUpload" type="submit" value="CmdUpload" data-toggle="kt-tooltip" title=" @Html.Raw(Resources.DefaultResource.UploadFile)" class="btn btn-success btn-icon-sm"
                                            formmethod="post">
                                        <i class="la la-upload"></i>
                                        <span class="kt-nav__link-text">
                                            @Html.Raw(Resources.DefaultResource.UploadFile)
                                        </span>
                                    </button>
                                    &nbsp;
                                    <button data-toggle="kt-tooltip" title="@Html.Raw(Resources.DefaultResource.ViewFile)" class="btn btn-info btn-primary btn-icon-sm" onclick="parent.open('@ConfigurationManager.AppSettings["InOrdersPath"].ToString()@(Model.SelectedItem.PictureName!=null ? Model.SelectedItem.PictureName.ToString():"")','_blank')">
                                        <i class="fa fa-eye"></i>
                                        <span class="kt-nav__link-text">
                                            @Html.Raw(Resources.DefaultResource.ViewFile)
                                        </span>
                                    </button>

                                    @*<input type="submit" value="Upload file" />*@

                                </div>
                                <div id="ImportDataLExecel" runat="server" class="dropdown dropdown-inline">
                                    <a class="btn btn-info btn-primary btn-icon-sm" data-bs-toggle="collapse" href="#collapseUploadItems"
                                       role="button" aria-expanded="false" aria-controls="collapseUploadItems">
                                        <i class="la la-upload"></i>
                                        @*<asp:Literal runat="server" Text=@Resources.DefaultResource.ImportData />*@
                                        @Html.Raw(Resources.DefaultResource.UploadItems)
                                    </a>
                                </div>

                                @*<a href="<%=ConfigurationManager.AppSettings[" ProjectsHTMLPath"].ToString() %>
                <%# Eval("FileName") %>" target="_blank" class="kt-widget4__title">
                <%# Session["SiteLanguage"].ToString() == "EnglishTheme" ? Eval("Caption") : Eval("CaptionAr") %>
            </a>*@

                            </div>
                            @*Import part to excel items*@
                            <div class="collapse" id="collapseUploadItems">
                                <div class="kt-portlet kt-portlet--solid-success kt-portlet--height-fluid">
                                    <div class="kt-portlet__head">
                                        <div class="kt-portlet__head-label">
                                            <h3 class="kt-portlet__head-title">

                                                @Html.Raw(Resources.DefaultResource.UploadItemData)

                                            </h3>
                                        </div>

                                    </div>
                                    <div class="kt-portlet__body">

                                        <div class="kt-portlet__content custom-file">
                                            @*<asp:FileUpload ID="ExcelFileUploader" CssClass="custom-file-input" runat="server" />*@
                                            @*<div class="col-7 pull-right">*@
                                            <input type="file" name="ExcelFileUploader" id="ExcelFileUploader" onchange="fileCheck(this);" class="custom-file-input"
                                                   accept=".xlsx, .xls, .csv" />
                                            @*</div>*@

                                            <label class="custom-file-label" for="customFile">
                                                @Html.Raw(Resources.DefaultResource.ChooseFile)
                                                @Html.Raw(Resources.DefaultResource.ExcelErrorMessage)

                                            </label>

                                        </div>
                                    </div>
                                    <div class="kt-portlet__foot kt-portlet__foot--sm kt-align-right">

                                        <button id="UploadItemsData" name="UploadItemsData" type="submit" value="UploadItemsData" data-bs-toggle="kt-tooltip" title='@Resources.DefaultResource.ImportData' class="btn btn-font-light btn-elevate btn-outline-hover-light"
                                                formmethod="post">

                                            <i class="fa fa-import">            </i>
                                            @*<span class="kt-nav__link-text">*@
                                            @Html.Raw(Resources.DefaultResource.UploadItemData)
                                            @*</span>*@
                                        </button>



                                    </div>
                                </div>

                            </div>
                            @*End Import part to excel*@
                            @*End of dropdown lists*@

                            <div id="DivMsg" class="ErrorMsglbl" runat="server">
                                @*check message error or warning*@
                                @if (TempData["Message"] != null)
                                {
                        <div class="alert alert-success alert-dismissable" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                            </button>
                            @Html.Raw(Resources.DefaultResource.SaveMessage)
                        </div>}
                                @if (TempData["warningMessage"] != null)
                                {
                        <div class="alert alert-warning alert-dismissable" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                            </button>

                            @TempData["warningMessage"]

                        </div>}

                            </div>
                            @if (Model != null)
                            {
                        <table id="showtable" class="table table-striped table-bordered table-hover table-checkable">
                            <thead class="thead-dark">
                                <tr>
                                    <th>
                                        @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                                        @Html.ActionLink(Resources.DefaultResource.No, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>

                                    <th>
                                        @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                                        @Html.ActionLink(Resources.DefaultResource.ID, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>


                                    <th>
                                        @Html.ActionLink(Resources.DefaultResource.TitleAr, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingModel, Filter_Value = ViewBag.FilterValue })
                                        @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                                    </th>
                                    <th>

                                        @Html.ActionLink(Resources.DefaultResource.RFID, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>

                                    <th>

                                        @Html.ActionLink(Resources.DefaultResource.SerialOrBarcode, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>
                                    <th>

                                        @Html.ActionLink(Resources.DefaultResource.ItemPrice, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>
                                    <th>

                                        @Html.ActionLink(Resources.DefaultResource.RequiredQty, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>

                                    <th>

                                        @Html.ActionLink(Resources.DefaultResource.InCurStock, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>
                                    <th>

                                        @Html.ActionLink(Resources.DefaultResource.Quantity, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>
                                    <th width="14%">

                                        @Html.ActionLink(Resources.DefaultResource.ExpiredDate, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>
                                    <th>

                                        @Html.ActionLink(Resources.DefaultResource.ContractName, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                    </th>
                                    <th width="7%">
                                        @Html.Raw(Resources.DefaultResource.Actions)
                                    </th>


                                </tr>
                            </thead>

                            @*@foreach (var item in Model.InOrdersDetails)*@
                            @{ int sno = 0; }
                            @for (int i = 0; i < Model.InOrdersDetails.Count; i++)
                            {@*@for (int i = 0; i < Model.SelectedItem.OutOrdersDetials.Count; i++)*@

                                                    <tr style="color:@(Model.InOrdersDetails[i].StockId == 0 ? "red" : "")">
                                                        @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].InOrderDetId)
                                                        @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].StockId)
                                                        @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].StoreId)

                                                        @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].CountableFlag)
                                                        @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].ItemName)
                                                        @*@Html.HiddenFor(modelItem => Model.InOrdersDetails[i].Qty)*@
                                                        <td>
                                                            @{ sno++; }
                                                            @sno

                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].ItemId)
                                                            @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].ItemId)
                                                        </td>

                                                        <td>
                                                            @(Model.InOrdersDetails[i].tbl_ItemsStock != null ?
                                                            @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].tbl_ItemsStock.Item_tbl.Item_Name)
                                                            : @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].ItemName))

                                                        </td>
                                                        <td style="word-break: break-all;">
                                                            @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].Item_RFID)
                                                            @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].Item_RFID)
                                                        </td>
                                                        <td style="word-break: break-all;">
                                                            @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].Item_BarCode)
                                                            @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].Item_BarCode)
                                                        </td>
                                                        <td>
                                                            @*@Html.DisplayFor(modelItem => Model.InOrdersDetails[i].CostPrice)*@
                                                            @Html.TextBoxFor(modelItem => Model.InOrdersDetails[i].CostPrice, new { @class = "form-control" })
                                                        </td>

                                                        <td>
                                                            @(

                             Model.InOrdersDetails[i].CountableFlag.GetValueOrDefault () ?
                             @Html.TextBoxFor(modelItem => Model.InOrdersDetails[i].Qty, new { @class = "form-control" })
                             : @Html.TextBoxFor(modelItem => Model.InOrdersDetails[i].Qty, new { @class = "form-control", @disabled = "disabled" })
                        )
                                                            @*<input name="Field"  value="@Model.InOrdersDetails[i].Qty" tabindex="0"  @(Model.InOrdersDetails[i].Item_tbl.CountableFlag ? "disabled=\"disabled\"" : "")>*@
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].InStoreQty)
                                                            @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].InStoreQty)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].tbl_ItemsStock.ItemQty)
                                                            @Html.HiddenFor(modelItem => Model.InOrdersDetails[i].tbl_ItemsStock.ItemQty)
                                                        </td>
                                                        <td width="14%">

                                                            @if (Model.InOrdersDetails[i].CountableFlag.GetValueOrDefault())
                                                            {
                                    <input type="text" id="InOrdersDetails[@i].ExpiredDate" name="InOrdersDetails[@i].ExpiredDate" value="@(Model.InOrdersDetails[i].ExpiredDate == null ? "" : Model.InOrdersDetails[i].ExpiredDate.Value.ToString("dd/MM/yyyy"))" class="form-control date-picker" AutoComplete="Off" data-date-format="dd/mm/yyyy" /> }
                                else
                                {
                        @Html.DisplayFor(modelItem => Model.InOrdersDetails[i].ExpiredDate)}
                                                        </td>

                                                        <td>

                                                            @*@Html.DropDownListFor(modelItem => Model.InOrdersDetails[i].ContractId, Model.Contracts, Resources.DefaultResource.ListChoose, new { @class = "select-chosen", id = "ContractId", name = "ContractId" })*@
                                                            @Html.DropDownListFor(modelItem => modelItem.InOrdersDetails[i].ContractId, new SelectList(Model.Contracts, "value", "Text", Model.InOrdersDetails[i].ContractId),   // THIS LINE CAUSES AN ERROR
                                                                         Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", @id = "ddlContracts", @style = "width:100%" })


                                                            @*<select class="select-chosen" id="@Model.ContractSelectList[i].Name" name="@Model.ContractSelectList[i].Name">
                                                                           @{
                                                                                                       <option value="">@Resources.DefaultResource.ListChoose</option>
                                        foreach (var item in Model.Contracts)
                                                                                                       {
                                                                                                           string vSelected = "";
                                                                                                           if (Model.ContractSelectList[i].Id == int.Parse(item.Value))
                                                                                                           {
                                                                               <option value="@item.Value" selected="selected">
                                                                                   @item.Text
                                                                               </option> }
                                                                                                           else
                                                                                                           {
                                                                               <option value="@item.Value">
                                                                                   @item.Text
                                                                               </option> }

                                                                                                       } }
                                                                       </select>*@

                                                        </td>

                                                        <td width="7%">
                                                            <button id="CmdDel" name="CmdDel" type="submit" value="CmdDel" data-toggle="kt-tooltip" title=" @Html.Raw(Resources.DefaultResource.Delete)" class="btn btn-outline-danger btn-sm btn-icon"
                                                                    formaction="/InOrders/AddEditInOrder/@i" formmethod="post" onclick="return confirm('@Html.Raw(Resources.DefaultResource.DelMessage)');">
                                                                <i class="la la-close"></i>
                                                            </button>
                                                        </td>
                                                    </tr>}
                        </table>}


                        </div>



                    </div>
                    </div>
                </div>
            </div>
        @* End of First Source items *@
        @* second target items *@


        <div class="col-6">
            <div class="kt-portlet kt-portlet--mobile">
                <div class="kt-portlet__head kt-portlet__head--lg">
                    <div class="kt-portlet__head-label">
                        <span class="kt-portlet__head-icon">
                            <i class="kt-font-brand flaticon2-checking"></i>
                        </span>
                        <h3 class="kt-portlet__head-title">
                            @Html.Raw(Resources.DefaultResource.ReaderData)

                        </h3>

                    </div>
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                <div id="ImportDataLink" runat="server" class="dropdown dropdown-inline">
                                    <a class="btn btn-info btn-primary btn-icon-sm" data-bs-toggle="collapse" href="#collapseExample"
                                       role="button" aria-expanded="false" aria-controls="collapseExample">
                                        <i class="la la-upload"></i>
                                        @*<asp:Literal runat="server" Text=@Resources.DefaultResource.ImportData />*@
                                        @Html.Raw(Resources.DefaultResource.ImportData)
                                    </a>
                                </div>
                                &nbsp;
                                <button name="CmdScan" type="submit" value="Scan" class="btn btn-success btn-primary btn-icon-sm" id="Scanbtn" formmethod="post" ValidationGroup="DML">
                                    @*onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'"*@
                                    <i class="la la-crosshairs"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.ScanReader)
                                    </span>
                                </button>
                                &nbsp;
                                <button name="CmdAdd" type="submit" value="AddItem" class="btn btn-info btn-primary btn-icon-sm" id="Addbtn" formmethod="post" ValidationGroup="DML">
                                    @*onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'"*@
                                    <i class="fa fa-cart-plus"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.AddItemTitle)
                                    </span>
                                </button>
                                &nbsp;
                                @if (Model.ScanItems != null)
                                {
                <span class="kt-nav__link-text" style="color:green; font-weight :bold">
                    @Html.Raw(Resources.DefaultResource.ReadNofItems):
                    &nbsp;

                    @Html.Raw(Model.ScanItems.Count.ToString())

                </span>}

                            </div>
                        </div>

                    </div>

                </div>
                @*Import part to excel*@
                <div class="collapse" id="collapseExample">
                    <div class="kt-portlet kt-portlet--solid-success kt-portlet--height-fluid">
                        <div class="kt-portlet__head">
                            <div class="kt-portlet__head-label">
                                <h3 class="kt-portlet__head-title">

                                    @Html.Raw(Resources.DefaultResource.ImportData)
                                    &nbsp;
                                    @Html.Raw(Resources.DefaultResource.ImportingTool)

                                </h3>
                            </div>

                        </div>
                        <div class="kt-portlet__body">

                            <div class="kt-portlet__content custom-file">
                                @*<asp:FileUpload ID="ExcelFileUploader" CssClass="custom-file-input" runat="server" />*@
                                @*<div class="col-7 pull-right">*@
                                <input type="file" name="ExcelFileUploader" id="ExcelFileUploader" onchange="fileCheck(this);" class="custom-file-input"
                                       accept=".xlsx, .xls, .csv" />
                                @*</div>*@

                                <label class="custom-file-label" for="customFile">
                                    @Html.Raw(Resources.DefaultResource.ChooseFile)
                                    @Html.Raw(Resources.DefaultResource.ExcelErrorMessage)

                                </label>

                            </div>
                        </div>
                        <div class="kt-portlet__foot kt-portlet__foot--sm kt-align-right">

                            <button id="UploadItems" name="UploadItems" type="submit" value="UploadItems" data-bs-toggle="kt-tooltip" title='@Resources.DefaultResource.ImportData' class="btn btn-font-light btn-elevate btn-outline-hover-light"
                                    formmethod="post">

                                <i class="fa fa-import">            </i>
                                @*<span class="kt-nav__link-text">*@
                                @Html.Raw(Resources.DefaultResource.ImportData)
                                @*</span>*@
                            </button>



                        </div>
                    </div>

                </div>
                @*End Import part to excel*@

                <div class="kt-portlet__body">

                    
                        @*check message error or warning*@
                        @if (TempData["ScannerMessage"] != null)
                        {
        <div class="alert alert-warning alert-dismissable" role="alert">
            @TempData["ScannerMessage"]
        </div>}
                    </div>

                    <div id="ChooseListdiv">
                        <div class="form-group row text-center">
                            @Html.Label("", Resources.DefaultResource.ReaderBarcodeTitle, htmlAttributes: new { @class = "control-label col-4 HeadMenuItem" })

                            <div class="col-2">
                                @Html.RadioButtonFor(m => m.ReaderType, "1", new { @class = "HeadMenuItem" })
                                @Html.Label("lblScanner", Resources.DefaultResource.ReaderTitle, new { @class = "HeadMenuItem text-start" })
                            </div>
                            <div class="col-2">
                                @Html.RadioButtonFor(m => m.ReaderType, "2", new { @class = "HeadMenuItem " })
                                @Html.Label("lblBarCode", Resources.DefaultResource.BarCodeNewTitle, new { @class = "HeadMenuItem  text-start" })
                            </div>

                            <div class="col-2">
                                @Html.RadioButtonFor(m => m.ReaderType, "3", new { @class = "HeadMenuItem " })
                                @Html.Label("lblBarCode", Resources.DefaultResource.BarCodeTitle, new { @class = "HeadMenuItem  text-start" })
                            </div>

                            <div class="col-2 text-right">
                                @Html.CheckBoxFor(modelItem => Model.NewItemFlag, new { @class = "HeadMenuItem " })
                                @Html.Label("lblNewItem", Resources.DefaultResource.OnlyNew, new { @class = "HeadMenuItem  text-start" })
                            </div>

                        </div>
                        @*<div class="form-group row text-right">

                            </div>*@
                    </div>
                    <div id="Barcodediv" style="display:@(Model.ReaderType == 2 ? "normal" : "none") ">
                        <div class="form-group row ">
                            @Html.Label("OutOrder", Resources.DefaultResource.ItemName, new { @class = "col-2 form-label HeadMenuItem ", Name = "lblOutOrder" })
                            <div class="col-6">
                                <!--@Html.TextBoxFor(m => m.Barcode, new { @class = "form-control" })--> @*onkeypress = "javascript: KeyChanged( this );"*@
                                @*@Html.DropDownListFor(m => m.SelItemId, Model.Items, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "SelItemId", name = "SelItemId" })*@
                                @Html.DropDownListFor(m => m.SelItemId, Model.Items, Resources.DefaultResource.ListChoose, new { @class = "select-chosen", tyle = "width:100%;", id = "SelItemId", name = "SelItemId" })

                            </div>
                            <div class="col-4">
                                <button id="SelNewItem" name="SelNewItem" type="submit" value="SelNewItem" data-bs-toggle="kt-tooltip" title='@Resources.DefaultResource.AddNewItem' class="btn btn-brand btn-elevate btn-icon-sm"
                                        formmethod="post">
                                    <i class="fa fa-plus">  </i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.AddNewItem)
                                    </span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div id="RFIDcodediv" style="display:@(Model.ReaderType == 3 ? "normal" : "none") ">
                        <div class="form-group row ">

                            @Html.Label("lblINOrderRFID", Resources.DefaultResource.Barcode, new { @class = "col-2 form-label HeadMenuItem ", Name = "lblINOrderRFID" })
                            <div class="col-8">
                                @Html.TextBoxFor(m => m.Barcode, new { @class = "form-control" }) @*onkeypress = "javascript: KeyChanged( this );"*@
                            </div>

                        </div>
                    </div>

                    @*<div class="table-responsive" style="height:800px; display:@(Model.ReaderType == 1 ? "normal" : "none")" id="Scannerdiv">*@
                    <div class="table-responsive" style="height:900px;" id="Scannerdiv">
                        @if (Model != null)
                        {
        <table id="myTable" class="table table-striped table-bordered table-hover table-checkable">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                        @Html.ActionLink(Resources.DefaultResource.ID, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                    </th>


                    <th>
                        @Html.ActionLink(Resources.DefaultResource.TitleAr, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingModel, Filter_Value = ViewBag.FilterValue })
                        @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                    </th>
                    <th>

                        @Html.ActionLink(Resources.DefaultResource.RFID, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                    </th>
                    <th>

                        @Html.ActionLink(Resources.DefaultResource.SerialOrBarcode, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                    </th>
                    @*<th>

                            @Html.ActionLink(Resources.DefaultResource.ItemBarcode, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                        </th>*@

                    <th>

                        @Html.ActionLink(Resources.DefaultResource.CountableTitle, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                    </th>
                    <th>

                        @Html.ActionLink(Resources.DefaultResource.Quantity, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                    </th>

                    <th>

                        @Html.ActionLink(Resources.DefaultResource.RoomOrStore, "AddEditInOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                    </th>
                    <th width="6%">
                        @Html.Raw(Resources.DefaultResource.Actions)
                        <input type="checkbox" id="myCheckAll" title=@Html.Raw(Resources.DefaultResource.Actions) />
                    </th>


                </tr>
            </thead>


            @*@foreach (var item in Model.ItemsStock)*@
            @if (Model.ScanItems != null)
            {

                for (int i = 0; i < Model.ScanItems.Count; i++)
                {
<tr style="color:@(Model.ScanItems[i].StockId == 0 ? "red" : "")">
    @Html.HiddenFor(modelItem => Model.ScanItems[i].Room_Id)
    @*@Html.HiddenFor(modelItem => Model.ScanItems[i].StockId)*@


    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].StockId)
        @Html.HiddenFor(modelItem => Model.ScanItems[i].StockId)

        @*@Html.TextBoxFor(x => Model.ScanItems[i].StockId, new { @class = "form-control", @readonly = "readonly", @name = i })*@
        @*<input type="text" name="@Model.ScanItems[i].StockId" id="@Model.ScanItems[i].StockId" value="@Model.ScanItems[i].StockId" />*@
    </td>

    <td style="display:@(Model.ScanItems[i].Item_Id > 0 ? "normal" : "none")">
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_tbl.Item_Name)
        @Html.HiddenFor(modelItem => Model.ScanItems[i].Item_Id)
    </td>
    <td style="display:@(Model.ScanItems[i].Item_Id == 0 ? "normal" : "none")">
        @Html.DropDownListFor(modelItem => Model.ItemsScanCheckList[i].ItemId, Model.Items, Resources.DefaultResource.ListChoose, new { @class = "select-chosen" })

    </td>
    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_RFID)
        @Html.HiddenFor(modelItem => Model.ScanItems[i].Item_RFID)
        @*@Html.EditorFor(modelItem => Model.ScanItems[i].Item_RFID)*@
    </td>

    <td style="display:@(Model.ScanItems[i].Item_Id > 0 && Model.ReaderType ==1 ? "normal" : "none")">
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_Serial)

    </td>
    <td style="display:@(Model.ScanItems[i].Item_Id > 0 && (Model.ReaderType ==2||Model.ReaderType ==3) ? "normal" : "none")">
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_BarCode)

    </td>
    <td style="display:@(Model.ScanItems[i].Item_Id == 0 ? "normal" : "none")">
        @Html.TextBoxFor(modelItem => Model.ScanItems[i].Item_BarCode, new { @class = "form-control" })

    </td>

    @*<td>
            @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_BarCode)
        </td>*@

    @*<td>
            @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_Serial)
        </td>*@
    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_tbl.CountableFlag)
    </td>
    @{ int ItemLowQty = 0;
        if (Model.ScanItems[i].Item_tbl != null && Model.ScanItems[i].ItemQty != null)
        {
            if (Model.ScanItems[i].ItemQty <= Model.ScanItems[i].Item_Stock_Limit)
            {
                ItemLowQty = 1;
            }
        } }
    <td class="@(ItemLowQty==1? "TxtCenter  btn-danger" : "TxtCenter")" title="@Resources.DefaultResource.ItemQtyOutLimitTitle">
        <div>
            @Html.DisplayFor(modelItem => Model.ScanItems[i].ItemQty)
        </div>
        @Html.HiddenFor(modelItem => Model.ScanItems[i].ItemQty)
    </td>

    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Room_tbl.Room_Name)
    </td>
    <td width="6%">
        @Html.CheckBoxFor(modelItem => Model.ItemsScanCheckList[i].IsSelected)
        @Html.HiddenFor(modelItem => Model.ItemsScanCheckList[i].Name, new { @Value = Model.ItemsScanCheckList[i].Name })
        @Html.HiddenFor(modelItem => Model.ItemsScanCheckList[i].Id, new { @Value = Model.ItemsScanCheckList[i].Id })

    </td>
</tr>
}
}

        </table> @*<div class="paginationCust pagedList">

                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager((PagedList.IPagedList)Model.ScanItems, Page_No => Url.Action("AddEditInOrder", new { Page_No,  Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })
                    , PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>*@}

                    </div>
                </div>
            </div>
        </div>

        @* End of second target items *@

    </div>

        }
@*for Valiadtion*@
@*<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>*@
@*<script defer src="~/Scripts/jquery.min.js"></script>*@
<script defer src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script defer src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
@*<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>*@
@section scripts
    {
    <script type="text/javascript">

        

            @*$("#FromStoreId").val(@Model.FromStoreId).trigger('change');*@
                  @*alert(@Model.FromDeptId);*@

            @*$("#SupplierId").val(@Model.SupplierId).trigger('change');*@

            $("#ToStoreId").val(@Model.ToStoreId).trigger('change');
       /* $("#SelItemId").select2();*/
            //alert(document.getElementsByName("OrganizedFlag").value);
            // Begin :: function when change select From Part
                   $(function () {

                     $("#dropDownListdiv").on("change", "select", function () {

                         var value = $(this).val();
                         var id = $(this).attr("id");
                         /* alert(id);*/
                        /* if (id != 'ActionType') {*/
                         if (id == 'StoreId_To') {
                             document.getElementById("DisplayMode").value = id;
                             const form = document.getElementById('myform');

                            /* form.action = "LoadData";*/
                             form.name = "submit";
                             form.value = "submit";
                             form.submit();

                            /* document.myform.submit();*/

                             //SetTempData();
                             //function SetTempData() {
                             //    $.ajax({
                             //        type: "POST",
                             //        url: '/Inventory/SetTempData',     //your action
                             //        data: $('#myform').serialize(),   //your form name.it takes all the values of model
                             //        dataType: 'json',
                             //        success: function (result) {
                             //            console.log(result);
                             //        }
                             //    });
                             //   }

                            /* document.myform.submit();*/
                         }

                       /*  setDropDrownList(string type, int value, int SearchType)*/

                     });
                   });

            $('input[type=radio][name=ReaderType]').change(function () {

                    if (this.value == '1') {

                        document.getElementById("PostFlag").value = 5;
                    }
                    else if (this.value == '2') {

                        document.getElementById("PostFlag").value = 7;
                    }
                    else if (this.value == '3') {

                        document.getElementById("PostFlag").value = 7;
                    }
                document.myform.submit();
            });





            // End :: function when change select From Part

            @*function OnSubmit()
            {
                var FromDeptId = document.getElementById("FromDeptId").value;

                document.getElementById("PostFlag").value = 1;
                if (FromDeptId != ToDeptId)
                {
                    let confirmAction = confirm("@Resources.DefaultResource.DepatmentDiffTitle");
                    if (confirmAction) {
                        //alert("Action successfully executed");
                        document.getElementById("PostFlag").value = 1;
                    }
                    else
                    {
                        document.getElementById("PostFlag").value = 0;
                        //alert("Action canceled");
                    }

                }
            }*@


        $('input[type=checkbox][name=NewItemFlag]').change(function () {

           /* alert("H");*/
            //document.myform.name = "CmdScan";
            //document.myform.value = "CmdScan";
            const form = document.getElementById('myform');
            form.name = "CmdScan";
            form.value = "CmdScan";
            document.getElementById("PostFlag").value = 6;
            form.submit();
          /*  document.myform.submit();*/
            /* }*/
        });

            document.getElementById("Barcode").onkeydown = function (e) {

                const form = document.getElementById('myform');
                /* form.action = "LoadData";*/
                if (e.key === "Enter") {
                    form.name = "CmdBarcode";
                    form.value = "CmdBarcode";
                    document.getElementById("PostFlag").value = 3;
                    form.submit();
                 /*   alert(e.key);*/
                }


            }

        /*   when click check  Button select all */
        $('#myCheckAll').click(function () {
            var chk = $(this).is(':checked');

            var cnt = $('input[type=checkbox]', "#myTable").length;
            $('input[type=checkbox]', "#myTable").each(function () {
                //var sub = "ItemsScanCheckList";
                //var V = $(this) ;
               /* let v= $(this).attr('name');*/

                /* alert($(this).attr('name').indexOf('ItemsScanCheckList'));*/
               /* alert($(this).attr('name'));*/
                if ($(this).attr('name') != undefined )
                {
                    if (chk) {
                        $(this).attr('checked', 'checked');
                    }
                    else {
                        $(this).removeAttr('checked');
                    }
                }
            });
        });

        $(function () {

            $("#ContractId").select2();
            $("#StoreId_To").select2();
            $("#SupplierId_From").select2();

            //$("#RoomId").select2();
            //$("#ItemId").select2();


        });
        //var form = $("#myform")
        //    .removeData("validator")
        //    .removeData("unobtrusiveValidation");

      /*  $.validator.unobtrusive.parse(form);*/

       

    </script>
    @*Display message to user*@
    @if (TempData["ErroMessage"] != null)
    {
<script type="text/javascript">

                      alert('@TempData["ErroMessage"]');

</script>
}
}


