

@model BOL.UsersPagesViewModel
@using PagedList.Mvc;
@using PagedList;

@{ Layout = "~/Views/Shared/_Layout.cshtml"; }

@*<h2>CarList</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<div class="kt-subheader   kt-grid__item" id="kt_subheader">
    <div class="kt-subheader__main">
        <h3 class="kt-subheader__title">
            @Html.Raw(Resources.DefaultResource.YOUAREHERE):

        </h3>
        <span class="kt-subheader__separator kt-hidden"></span>
        <div class="kt-subheader__breadcrumbs">
            <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-shelter"></i></a>
            <span class="kt-subheader__breadcrumbs-separator"></span>

            <a href="/Home/Index" class="kt-subheader__breadcrumbs-link">
                @Html.Raw(Resources.DefaultResource.Dashboard)
            </a>

            <span class="kt-subheader__breadcrumbs-separator"></span>
            <a href="/Users/UsersList" class="kt-subheader__breadcrumbs-link">
                @Html.Raw(Resources.DefaultResource.UsersList)
            </a>

            <span class="kt-subheader__breadcrumbs-separator"></span>
            <span class="kt-subheader__breadcrumbs-link kt-subheader__breadcrumbs-link--active">
                @Html.Raw(ViewBag.UserName as string)
            </span>

        </div>
    </div>
</div>
<div class="kt-subheader-search">
    <h3 class="kt-subheader-search__title">
        @*<asp:Literal runat="server" Text="<%$ Resources:DefaultResource, GlobalSearch%>" />*@
        @Html.Raw(Resources.DefaultResource.GlobalSearch)
        <span class="kt-subheader-search__desc">
            @Html.Raw(Resources.DefaultResource.GlobalSearchNote)
            @*<asp:Literal runat="server" Text="<%$ Resources:DefaultResource, GlobalSearchNote%>" />*@
        </span>
    </h3>
    @*@using (Html.BeginForm("CarList", "Cars", FormMethod.Get))
        {
            <p>
                Search Name: @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
                <input type="submit" value="Find" />
            </p>
        }*@
    @using (Html.BeginForm("UsersPagesAssignment", "Users", FormMethod.Get))
    {
@Html.AntiForgeryToken();
<div class="kt-form">
    <div class="kt-grid">
        <div class="kt-grid__item">
            <div class="row">

                <div class="col-lg-6">
                    <div class="kt-input-icon kt-input-icon--pill kt-input-icon--right">
                        @*<asp:TextBox ID="SearchTextBox" runat="server" CssClass="form-control "></asp:TextBox>*@

                        @Html.TextBox("Search_Data", ViewBag.FilterValue as string, new { @class = "form-control" })
                        <span class="kt-input-icon__icon kt-input-icon__icon--right"><span><i class="la la-search"></i></span></span>
                    </div>
                </div>


                <div class="col-lg-3">
                    <div class="kt-grid__item kt-grid__item--middle">
                        <div class="kt-margin-top-20 kt--visible-tablet-and-mobile"></div>

                        @*<asp:LinkButton ID="SearchLinkButton" runat="server" Text="<%$ Resources:DefaultResource, Search%>"
                            CssClass="btn btn-upper btn-bold btn-font-sm kt-subheader-search__submit-btn" />*@
                        <input type="submit" class="btn btn-upper btn-bold btn-font-sm kt-subheader-search__submit-btn" value=@Resources.DefaultResource.Search />

                        <input type="reset" class="btn btn-upper btn-bold btn-font-sm btn-default" value=@Resources.DefaultResource.Clear />
                        @*<asp:LinkButton ID="ClearLinkButton" runat="server" Text="<%$ Resources:DefaultResource, Clear%>"
                            CssClass="btn btn-upper btn-bold btn-font-sm btn-default" OnClick="ClearLinkButton_Click" />*@

                    </div>
                </div>

            </div>
        </div>

    </div>
</div>}
</div>
@using (Html.BeginForm("UsersPagesAssignment", "Users", FormMethod.Post, htmlAttributes: new { Id = "myform" }))
{
<div class="kt-portlet kt-portlet--mobile">
    <div class="kt-portlet__head kt-portlet__head--lg">
        <div class="kt-portlet__head-label">
            <span class="kt-portlet__head-icon">
                <i class="kt-font-brand flaticon2-checking"></i>
            </span>
            <h3 class="kt-portlet__head-title">
                @Html.Raw(Resources.DefaultResource.SystemPagesAssignment)

            </h3>

        </div>
        <div class="kt-portlet__head-toolbar">
            <div class="kt-portlet__head-wrapper">
                <div class="kt-portlet__head-actions">
                    @*<button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="Addbtn">

            <i class="la la-plus"></i>
            <span class="kt-nav__link-text">
                @Html.Raw(Resources.DefaultResource.NewRecord)
            </span>
        </button>*@
                    @if (ViewContext.Controller.HasPermission("Permissions", "Updating"))
                    {
                    <input id="CmdSave" type="submit" value="@Html.Raw(Resources.DefaultResource.Insert)"
                           class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.Insert)"
                           data-toggle="@Html.Raw(Resources.DefaultResource.Insert)" formmethod="post" />
                    }
                                </div>
                @*formaction='@Url.Action("UsersPagesAssignment", "Users", new { UserId = ViewBag.UserId })'
               *@
            </div>

        </div>

    </div>
    <div class="kt-portlet__body">

        <div class="table-responsive">

          
            @if (TempData["warningMessage"] != null)
            {
        <div class="alert alert-warning alert-dismissable" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
            </button>

            @TempData["warningMessage"]

        </div>}


            @if (TempData["Message"] != null)
            {
        <div id="DivMsg" class="ErrorMsglbl" runat="server">



            <div class="alert alert-success alert-dismissable" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                </button>
                @*<h4>
            <i class="fa fa-times-circle"></i> Error
            </h4>*@
                @Html.Raw(Resources.DefaultResource.SaveMessage)
            </div>

        </div>}
            @Html.HiddenFor(m => m.CurUserId)
            @if (Model != null)
            {

        <table id="showtable" class="table table-striped table-bordered table-hover table-checkable">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                        @Html.ActionLink(Resources.DefaultResource.ID, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue, UserId = ViewBag.UserId })
                    </th>

                    <th>

                        @Html.ActionLink(Resources.DefaultResource.PageName, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue, UserId=ViewBag.UserId })
                    </th>


                    <th>
                        @Html.ActionLink(Resources.DefaultResource.PageLink, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingModel, Filter_Value = ViewBag.FilterValue, UserId = ViewBag.UserId })
                        @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                    </th>
                    <th>

                        @Html.ActionLink(Resources.DefaultResource.Accessing, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue, UserId = ViewBag.UserId })
                    </th>
                    <th>

                        @Html.ActionLink(Resources.DefaultResource.Adding, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue, UserId = ViewBag.UserId })
                    </th>
                    <th>

                        @Html.ActionLink(Resources.DefaultResource.Updating, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue, UserId = ViewBag.UserId })
                    </th>
                    <th>

                        @Html.ActionLink(Resources.DefaultResource.Deleting, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue, UserId = ViewBag.UserId })
                    </th>
                    <th>
                        @Html.ActionLink(Resources.DefaultResource.UpdatedOn, "UsersPagesAssignment", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue, UserId = ViewBag.UserId })
                    </th>
                    @*<th width="10%">
                    @Html.Raw(Resources.DefaultResource.Actions)
                </th>*@

                </tr>
            </thead>


            @*@foreach (var item in Model.UsersPages)*@
            @for (int i = 0; i < Model.UsersPages.Count; i++)
            {
        @Html.HiddenFor(modelItem => Model.UsersPages[i].PageID)
         @Html.HiddenFor(modelItem => Model.UsersPages[i].UserID)
          
                                  @Html.HiddenFor(modelItem => Model.ItemsPagesCheckList[i].PageId, new { @Value = Model.ItemsPagesCheckList[i].PageId })
                                                          <tr class="TxtCenter">
                                                              <td>
                                                                  @Html.DisplayFor(modelItem => Model.UsersPages[i].PageID)
                                                              </td>
                                                              <td>
                                                                  @Html.DisplayFor(modelItem => Model.UsersPages[i].tbSystemPages.PageNameAr)
                                                              </td>
                                                              <td>
                                                                  @Html.DisplayFor(modelItem => Model.UsersPages[i].tbSystemPages.PageLink)
                                                              </td>
                                                              <td>

                                                                  <span class="kt-switch kt-switch--outline kt-switch--icon kt-switch--success">
                                                                      <label>
                                                                          @*@{ bool AccessingValue = Model.UsersPages[i].Adding.GetValueOrDefault(); }*@
                                                                          @Html.CheckBoxFor(modelItem => Model.ItemsPagesCheckList[i].IsAccessSelected)

                                                                          @*@Html.CheckBox("Access" + i.ToString(), Model.UsersPages[i].Accessing ?? false)*@
                                                                          @*@Html.CheckBox("item.Accessing", false)*@
                                                                          <span></span>
                                                                      </label>
                                                                  </span>

                                                              </td>

                                                              <td>
                                                                  <span class="kt-switch kt-switch--outline kt-switch--icon kt-switch--success">
                                                                      <label>
                                                                          @*@{ bool AddingValue = Model.UsersPages[i].Adding.GetValueOrDefault(); }*@
                                                                          @*@Html.CheckBox("Add"+i.ToString(), Model.UsersPages[i].Adding ?? false)*@
                                                                          @*@Html.TextBoxFor(modelItem => Model.UsersPages[i].Adding.GetValueOrDefault())*@
                                                                          @Html.CheckBoxFor(modelItem => Model.ItemsPagesCheckList[i].IsAddSelected)
                                                                          <span></span>
                                                                      </label>
                                                                  </span>
                                                              </td>

                                                              <td>

                                                                  <span class="kt-switch kt-switch--outline kt-switch--icon kt-switch--success">
                                                                      <label>
                                                                          @*@{ bool UpdatingValue = Model.UsersPages[i].Updating.GetValueOrDefault(); }*@
                                                                          @*<input type="checkbox" id="Update" + @i.ToString() name="Update"@i.ToString() checked='@Model.UsersPages[i].Updating ?? false'>*@
                                                                                                                        @*@Html.CheckBox("Update" + i.ToString(), Model.UsersPageslist[i].Updating ?? false)*@
                                                                                                                        @*@Html.TextBoxFor(modelItem => Model.UsersPages[i].Updating.GetValueOrDefault())*@
                                                                                                                        @*@Html.CheckBoxFor(modelItem => UpdatingValue)*@
                                                                                                                        @Html.CheckBoxFor(modelItem => Model.ItemsPagesCheckList[i].IsUpdateSelected)
                                                                                                                        <span></span>
                                                                                                                    </label>
                                                                                                                </span>
                                                                                                            </td>

                                                                                                            <td>
                                                                                                                <span class="kt-switch kt-switch--outline kt-switch--icon kt-switch--success">
                                                                                                                    <label>
                                                                                                                        @*@{ bool DeletingValue = Model.UsersPages[i].Deleting.GetValueOrDefault(); }*@
                                                                                                                        @*@Html.TextBoxFor(modelItem => Model.UsersPages[i].Deleting.GetValueOrDefault())*@
                                                                                                                        @*@Html.CheckBox("Delete" + i.ToString(), Model.UsersPages[i].Deleting ?? false)*@
                                                                                                                        @*@Html.CheckBoxFor(modelItem => DeletingValue)*@
                                                                                                                        @Html.CheckBoxFor(modelItem => Model.ItemsPagesCheckList[i].IsDeleteSelected)
                                                                                                                        <span></span>
                                                                                                                    </label>
                                                                                                                </span>
                                                                                                            </td>

                                                                                                            <td>

                                                                                                                @Html.DisplayFor(modelItem => Model.UsersPages[i].UpdateOn)
                                                                                                            </td>
                                                                                                        </tr>}

        </table>

                            @*<div class="paginationCust pagedList">*@

                                @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

                                @*@Html.PagedListPager((PagedList.IPagedList)Model.UsersPages, Page_No => Url.Action("UsersPagesAssignment", new { Page_No, UserId = ViewBag.UserId, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })
                                , PagedListRenderOptions.ClassicPlusFirstAndLast)*@



                            @*</div>*@
                            
                            }
        </div>
    </div>
</div>}

<script defer src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
@section scripts{
    <script>


        $(document).ready(function () {
            $('a.delete').click(OnDeleteClick);
        });
        function OnDeleteClick(e) {
            var employeeId = e.target.id;
            var flag = confirm('You are about to delete Cat ID ' + employeeId + ' permanently.Are you sure you want to delete this record ? ');
            if (flag) {
                $.ajax({
                    url: '/Items/DeleteAJAX',
                    type: 'POST',
                    data: { CatId: CatId },
                    dataType: 'json',
                    success: function (result) { alert(result); $("#" + employeeId).parent().parent().remove(); },
                    error: function () { alert('Error!'); }
                });

            }
            return false;

        }





    </script>
}