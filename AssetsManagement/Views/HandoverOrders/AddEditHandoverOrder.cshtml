@*@using  MultipleModelInOneView;*@
@model BOL.HandoverOrdersViewModel

@using PagedList.Mvc;
@using PagedList;

@{ //ViewBag.Title = @Html.Raw(Resources.DefaultResource.Rooms);
    Layout = "~/Views/Shared/_Layout.cshtml"; }
@*<h2>CarList</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<div class="kt-subheader   kt-grid__item" id="kt_subheader">
    <div class="kt-subheader__main">
        <h3 class="kt-subheader__title">
            @Html.Raw(Resources.DefaultResource.YOUAREHERE):

        </h3>
        <span class="kt-subheader__separator kt-hidden"></span>
        <div class="kt-subheader__breadcrumbs">

            <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-shelter"></i></a>
            <span class="kt-subheader__breadcrumbs-separator"></span>

            <a href="/Home/Index" class="kt-subheader__breadcrumbs-link">
                @Html.Raw(Resources.DefaultResource.Dashboard)
            </a>

            @*Url.Action("ItemsStockList", new { Page_No, EmpId = @ViewBag.EmpId,  Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })*@
            @if (@ViewBag.EmpId != null)
            {
<span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("Employees", "HR", new { EmpId = @ViewBag.EmpId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.EmpName as string)
                </a>}

            @if (@ViewBag.DeptId != null)
            {
<span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("Departements", "HR", new { DeptId = @ViewBag.DeptId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.DeptName as string)
                </a>}
            @if (@ViewBag.RoomId != null)
            {
<span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("RoomsList", "Buildings", new { RoomId = @ViewBag.RoomId,StoreFlag=@ViewBag.StoreFlag,FloorId=@ViewBag.FloorId,BuildingId=ViewBag.BuildingId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.RoomName as string)
                </a>}


        </div>
    </div>
</div>
@using (Html.BeginForm("AddEditHandoverOrder", "HandoverOrders", FormMethod.Post, htmlAttributes: new { id = "myform", name = "myform" }))
{
@Html.AntiForgeryToken();
<div class="kt-content  kt-grid__item kt-grid__item--fluid" id="kt_content">
    @* First source items *@
    <div class="row">

        <div class="col-xl-5">
            <div class="kt-portlet kt-portlet--mobile">
                <div class="kt-portlet__head kt-portlet__head--lg">
                    <div class="kt-portlet__head-label">
                        <span class="kt-portlet__head-icon">
                            <i class="kt-font-brand flaticon2-checking"></i>
                        </span>
                        <h3 class="kt-portlet__head-title">
                            @Html.Raw(Resources.DefaultResource.HandOverOrdersTitle)

                        </h3>

                    </div>
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                @*<button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="Addbtn" onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'">
                                        <i class="la la-plus"></i>
                                        <span class="kt-nav__link-text">
                                            @Html.Raw(Resources.DefaultResource.NewRecord)
                                        </span>
                                    </button>*@
                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="Addbtn"
                                        onclick="location.href='@Url.Action("AddEditHandoverOrder", "HandoverOrders",new {Id=""})'">

                                    <i class="la la-plus"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.NewRecord)
                                    </span>
                                </button>
                                &nbsp;
                                <button name="CmdSave" type="submit" id="CmdSave" value="CmdSave" class="btn btn-success" formmethod="post" ValidationGroup="DML">
                                    <i class="fa-floppy-disk"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.Save)
                                    </span>
                                </button>
                                @*<input id="CmdSave" value="@Html.Raw(Resources.DefaultResource.Save )" name="CmdSave" type="submit" onclick="OnSubmit()" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.TransferAsset)" data-toggle="@Html.Raw(Resources.DefaultResource.TransferAsset)" formaction="/Inventory/AssetItemsList" formmethod="post" ValidationGroup="DML" />*@
                            </div>
                        </div>

                    </div>

                </div>
                <div class="kt-portlet__body">
                    @Html.HiddenFor(m => m.DisplayMode, new { @class = "form-control hidden", id = "DisplayMode", name = "DisplayMode" })

                    @Html.HiddenFor(m => m.PostFlag, new { @class = "hidden", id = "PostFlag", name = "PostFlag" })
                    @Html.HiddenFor(m => m.SelectedItem.PictureName)
                    @*<form method="post" id="ChangeEvent">*@
                    @*@Html.RadioButton("A1", "1", ViewData["IsSelected"] == "1", new { onclick = "document.getElementById('ChangeEvent').submit();" })*@
                    @*</form>*@
                    <div class="table-responsive" style="height:800px">
                        @*start of part of drowdawn lists*@
                        <br />
                        <br />
                        <div id="dropDownListdiv">

                            <div class="form-group row ">

                                @Html.Label("OutOrder", Resources.DefaultResource.VoucherNum, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.SelectedItem.OverOrderId, new { @class = "form-control", @readonly = "true" })
                                </div>

                                @Html.Label("lblOverOrderId", Resources.DefaultResource.ToInventory, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblOutOrderDate" })
                                <div class="col-4">
                                    @Html.DropDownListFor(m => m.SelectedItem.StoreId, Model.Inventories, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", @required = "required", style = "width:100%;", id = "StoreId", name = "StoreId" })

                                    @Html.ValidationMessageFor(m => m.SelectedItem.StoreId, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })

                                </div>

                            </div>

                            <div class="form-group row ">

                                @Html.Label("lblOutOrderDate", Resources.DefaultResource.VoucherDate, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblOutOrderDate" })
                                <div class="col-4">

                                    @{ string ExpiredDate = "";
                                        if (Model.SelectedItem.OverOrderDate == null)
                                        {
                                            //ExpiredDate =;
                                        }
                                        else
                                        {
                                            ExpiredDate = Model.SelectedItem.OverOrderDate.Value.ToString("dd/MM/yyyy");
                                        } }
                                    <input type="text" name="SelectedItem.OverOrderDate" value="@ExpiredDate" class="form-control date-picker" AutoComplete="Off" data-date-format="dd/mm/yyyy" required />
                                    @Html.ValidationMessageFor(m => m.SelectedItem.OverOrderDate, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })

                                    @*@Html.TextBoxFor(m => m.SelectedItem.OutOrderDate, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autocomplete = "off"})


                    @Html.ValidationMessageFor(m => m.SelectedItem.OutOrderDate, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })*@

                                </div>

                                @Html.Label("lblReason", Resources.DefaultResource.HandOverReason, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblReason" })
                                <div class="col-4">
                                    @Html.DropDownListFor(m => m.SelectedItem.ReasonId, Model.HandOverReasons, Resources.DefaultResource.ListChoose, new { @class = "form-control", @required = "required", id = "ReasonId", name = "ReasonId" })

                                    @Html.ValidationMessageFor(m => m.SelectedItem.ReasonId, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })

                                </div>
                            </div>

                        </div>

                        @*<div class="form-group row ">


                            @Html.Label("lbEmpId", Resources.DefaultResource.EmpName, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblEmpName" })
                            <div class="col-10">
                                @Html.DropDownListFor(m => m.SelectedItem.EmpId, Model.Employees, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "EmpId", name = "EmpId" })

                            </div>

                        </div>*@
                        <div class="form-group row">

                            @Html.Label("lblHandOverNotes", Resources.DefaultResource.Notes, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblHandOverNotes" })
                            <div class="col-10">
                                @Html.TextAreaFor(m => m.SelectedItem.Remarks, 3, 55, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.SelectedItem.Remarks, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })
                            </div>
                        </div>

                        @*End of dropdown lists*@

                        <div id="DivMsg" class="ErrorMsglbl" runat="server">
                            @*check message error or warning*@
                            @if (TempData["Message"] != null)
                            {
                        <div class="alert alert-success alert-dismissable" role="alert">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                            </button>
                            @Html.Raw(Resources.DefaultResource.SaveMessage)
                        </div>
                     }
                            @if (TempData["warningMessage"] != null)
                            {
                    <div class="alert alert-warning alert-dismissable" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                        </button>

                        @TempData["warningMessage"]

                    </div>}

                        </div>
                        @if (Model != null)
                        {
                    <table id="showtable" class="table table-striped table-bordered table-hover table-checkable">
                        <thead class="thead-dark">
                            <tr>
                                <th>
                                    @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                                    @Html.Raw(Resources.DefaultResource.No)
                                </th>


                                @*<th>

                    @Html.ActionLink(Resources.DefaultResource.ID, "AddEditHandoverOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                </th>*@


                                <th>
                                    @Html.Raw(Resources.DefaultResource.TitleAr)
                                    @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                                </th>
                                <th>

                                    @Html.Raw(Resources.DefaultResource.RFID)
                                </th>

                                @*<th>

                    @Html.ActionLink(Resources.DefaultResource.Barcode, "AddEditHandoverOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                </th>*@

                                <th>

                                    @Html.Raw(Resources.DefaultResource.RequiredQty)
                                </th>


                                <th>

                                    @Html.Raw(Resources.DefaultResource.Quantity)
                                </th>
                                <th>

                                    @Html.Raw(Resources.DefaultResource.RoomName)
                                </th>
                                <th>

                                    @Html.Raw(Resources.DefaultResource.EmpName)
                                </th>
                                <th>

                                    @Html.Raw(Resources.DefaultResource.DepartementName)
                                </th>
                                <th width="10%">
                                    @Html.Raw(Resources.DefaultResource.Actions)
                                </th>


                            </tr>
                        </thead>

                        @*@foreach (var item in Model.HandOverOrdersDetails)*@
                        @{ int sno = 0; }
                        @for (int i = 0; i < Model.HandOverOrdersDetails.Count; i++)
                        {@*@for (int i = 0; i < Model.SelectedItem.OutOrdersDetials.Count; i++)*@

                                                <tr>
                                                    @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].OverOrderDetId)
                                                    @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].StockId)
                                                    @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].StoreId)
                                                    @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].EmpId)
                                                    @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].DeptId)
                                                    <td>
                                                        @{ sno++; }
                                                        @sno

                                                    </td>
                                                    @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].ItemId)
                                                    @*<td>
                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].ItemId)
                                        @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].ItemId)
                                    </td>*@

                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].tbl_ItemsStock.Item_tbl.Item_Name)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].Item_RFID)
                                                        @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].Item_RFID)
                                                    </td>
                                                    @*<td>
                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].Item_BarCode)
                                        @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].Item_BarCode)
                                    </td>*@

                                                    <td>
                                                        @*@Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].Qty)*@

                                                        @(Model.HandOverOrdersDetails[i].tbl_ItemsStock.Item_tbl.CountableFlag ?
                                                  @Html.TextBoxFor(modelItem => Model.HandOverOrdersDetails[i].Qty, new { @class = "form-control" })
                                                : @Html.TextBoxFor(modelItem => Model.HandOverOrdersDetails[i].Qty, new { @class = "form-control" ,@disabled = "disabled" })
                                                )
                                                    </td>


                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].InStoreQty)
                                                        @Html.HiddenFor(modelItem => Model.HandOverOrdersDetails[i].InStoreQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].Room_tbl.Room_Name)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].VmEmployees.FULL_NAME_AR)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => Model.HandOverOrdersDetails[i].VmDepartments.Name)
                                                    </td>
                                                    <td width="10%">
                                                        <button id="CmdDel" name="CmdDel" type="submit" value="CmdDel" data-toggle="kt-tooltip" title=" @Html.Raw(Resources.DefaultResource.Delete)" class="btn btn-outline-danger btn-sm btn-icon"
                                                                formaction="/HandoverOrders/AddEditHandoverOrder/@i" formmethod="post" onclick="return confirm('@Html.Raw(Resources.DefaultResource.DelMessage)');">
                                                            <i class="la la-close"></i>
                                                        </button>
                                                    </td>
                                                </tr>
}
                    </table> @*<div class="paginationCust pagedList">

        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager((PagedList.IPagedList)Model.SelectedItem.OutOrdersDetials, Page_No => Url.Action("AddEditHandoverOrder", new { Page_No, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })
                 , PagedListRenderOptions.ClassicPlusFirstAndLast)
    </div>*@}


                    </div>


                </div>
            </div>
        </div>

        @* End of First Source items *@
        @* second target items *@


        <div class="col-xl-7">
            <div class="kt-portlet kt-portlet--mobile">
                <div class="kt-portlet__head kt-portlet__head--lg">
                    <div class="kt-portlet__head-label">
                        <span class="kt-portlet__head-icon">
                            <i class="kt-font-brand flaticon2-checking"></i>
                        </span>
                        <h3 class="kt-portlet__head-title">
                            @Html.Raw(Resources.DefaultResource.ReaderData)

                        </h3>

                    </div>
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">

                                <button name="CmdScan" type="submit" value="Scan" class="btn btn-success btn-primary btn-icon-sm" id="Scanbtn" formmethod="post" ValidationGroup="DML">
                                    @*onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'"*@
                                    <i class="la la-crosshairs"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.ScanReader)
                                    </span>
                                </button>

                                <button name="CmdAdd" type="submit" value="AddItem" class="btn btn-info btn-primary btn-icon-sm" id="Addbtn" formmethod="post" ValidationGroup="DML">
                                    @*onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'"*@
                                    <i class="la la-crosshairs"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.AddItemTitle)
                                    </span>
                                </button>
                                @*<input id="CmdSave" value="@Html.Raw(Resources.DefaultResource.Save )" name="CmdSave" type="submit" onclick="OnSubmit()" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.TransferAsset)" data-toggle="@Html.Raw(Resources.DefaultResource.TransferAsset)" formaction="/Inventory/AssetItemsList" formmethod="post" ValidationGroup="DML" />*@
                            </div>
                        </div>

                    </div>

                </div>
                <div class="kt-portlet__body">

                    <div id="DivMsg" class="ErrorMsglbl" runat="server">
                        @*check message error or warning*@
                        @if (TempData["ScannerMessage"] != null)
                        {
                <div class="alert alert-warning alert-dismissable" role="alert">
                    @TempData["ScannerMessage"]
                </div>}
                    </div>
                    @*Scan or Enter barcode*@ 
                    <div id="ChooseListdiv">
                        <div class="form-group row text-center">
                            @Html.Label("", Resources.DefaultResource.ReaderBarcodeTitle, htmlAttributes: new { @class = "control-label col-4 HeadMenuItem" })

                            <div class="col-3">
                                @Html.RadioButtonFor(m => m.ReaderType, "1", new { @class = "HeadMenuItem" })
                                @Html.Label("lblScanner", Resources.DefaultResource.ReaderTitle, new { @class = "HeadMenuItem text-start" })
                            </div>
                            <div class="col-3">

                                @Html.RadioButtonFor(m => m.ReaderType, "2", new { @class = "HeadMenuItem " })
                                @Html.Label("lblBarCode", Resources.DefaultResource.BarCodeTitle, new { @class = "HeadMenuItem  text-start" })

                            </div>

                        </div>
                    </div>
                    <div id="Barcodediv" style="display:@(Model.ReaderType == 2 ? "normal" : "none") ">
                        <div class="form-group row ">

                            @Html.Label("OutOrder", Resources.DefaultResource.Barcode, new { @class = "col-2 form-label HeadMenuItem ", Name = "lblOutOrder" })
                            <div class="col-8">
                                @Html.TextBoxFor(m => m.Barcode, new { @class = "form-control" }) @*onkeypress = "javascript: KeyChanged( this );"*@
                            </div>

                        </div>
                    </div>
                    @*display:@(Model.ReaderType == 1 ? "normal" : "none")*@

                    <div class="table-responsive" style="height:800px" id="Scannerdiv">

                        @if (Model != null)
                        {
                <table id="showtable" class="table table-striped table-bordered table-hover table-checkable">
                    <thead class="thead-dark">
                        <tr>
                            <th>
                                @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                                @Html.Raw(Resources.DefaultResource.ID)
                            </th>


                            <th>
                                @Html.Raw(Resources.DefaultResource.TitleAr)
                                @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                            </th>
                            <th>

                                @Html.Raw(Resources.DefaultResource.RFID)
                            </th>

                            <th>

                                @Html.Raw(Resources.DefaultResource.SerialOrBarcode)
                            </th>
                            <th>

                                @Html.Raw(Resources.DefaultResource.CountableTitle)
                            </th>
                            <th>

                                @Html.Raw(Resources.DefaultResource.Quantity)
                            </th>

                            <th>

                                @Html.Raw(Resources.DefaultResource.RoomOrStore)
                            </th>
                            <th>
                                @Html.Raw(Resources.DefaultResource.DepartementName)
                            </th>
                            <th>
                                @Html.Raw(Resources.DefaultResource.EmpName)
                            </th>
                            <th>

                                @Html.Raw(Resources.DefaultResource.ItemStatus)
                            </th>
                            <th width="4%">
                                @Html.Raw(Resources.DefaultResource.Actions)
                            </th>


                        </tr>
                    </thead>


                    @*@foreach (var item in Model.ItemsStock)*@
                    @if (Model.ScanItems != null)
                    {
                        for (int i = 0; i < Model.ScanItems.Count; i++)
                        {
                <tr>
                    @Html.HiddenFor(modelItem => Model.ScanItems[i].Room_Id)
                    @Html.HiddenFor(modelItem => Model.ScanItems[i].Depart_Id)
                    @Html.HiddenFor(modelItem => Model.ScanItems[i].Emp_Id)

                    @*@Html.HiddenFor(modelItem => Model.ScanItems[i].StockId)*@

                    @Html.HiddenFor(modelItem => Model.ScanItems[i].Item_Id)
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].StockId)
                        @Html.HiddenFor(modelItem => Model.ScanItems[i].StockId)

                        @*@Html.TextBoxFor(x => Model.ScanItems[i].StockId, new { @class = "form-control", @readonly = "readonly", @name = i })*@
                        @*<input type="text" name="@Model.ScanItems[i].StockId" id="@Model.ScanItems[i].StockId" value="@Model.ScanItems[i].StockId" />*@
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_tbl.Item_Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_RFID)
                        @Html.HiddenFor(modelItem => Model.ScanItems[i].Item_RFID)
                        @*@Html.EditorFor(modelItem => Model.ScanItems[i].Item_RFID)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_BarCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_tbl.CountableFlag)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].ItemQty)
                        @Html.HiddenFor(modelItem => Model.ScanItems[i].ItemQty)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].Room_tbl.Room_Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].VmDepartments.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].VmEmployees.FULL_NAME_AR)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.ScanItems[i].Status.AName)
                    </td>
                    <td width="4%">
                        @Html.CheckBoxFor(modelItem => Model.ItemsScanCheckList[i].IsSelected)
                        @Html.HiddenFor(modelItem => Model.ItemsScanCheckList[i].Name)
                        @Html.HiddenFor(modelItem => Model.ItemsScanCheckList[i].Id)

                    </td>
                </tr>}
                                    }

                </table> @*<div class="paginationCust pagedList">

        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager((PagedList.IPagedList)Model.ScanItems, Page_No => Url.Action("AddEditHandoverOrder", new { Page_No,  Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })
            , PagedListRenderOptions.ClassicPlusFirstAndLast)
    </div>*@}

                    </div>
                </div>
            </div>
        </div>
    </div>
    @* End of second target items *@

</div>}
@*<script defer src="~/Scripts/jquery.min.js"></script>
    <script defer src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>*@
<script defer src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
@section scripts
    {
    <script type="text/javascript">

            @*$("#FromEmpId").val(@Model.FromEmpId).trigger('change');*@
              @*alert(@Model.FromDeptId);*@

            @*$("#FromDeptId").val(@Model.FromDeptId).trigger('change');*@

            @*$("#FromRoomId").val(@Model.FromRoomId).trigger('change');*@

        //alert(document.getElementsByName("OrganizedFlag").value);
        // Begin :: function when change select From Part
               $(function () {

                 $("#dropDownListdiv").on("change", "select", function () {

                     var value = $(this).val();
                     var id = $(this).attr("id");
                     /* alert(id);*/
                     if (id != 'ReasonId') {
                         document.getElementById("DisplayMode").value = id;
                         const form = document.getElementById('myform');
                        /* form.action = "LoadData";*/
                         form.name = "submit";
                         form.value = "submit";
                         form.submit();

                        /* document.myform.submit();*/

                         //SetTempData();
                         //function SetTempData() {
                         //    $.ajax({
                         //        type: "POST",
                         //        url: '/Inventory/SetTempData',     //your action
                         //        data: $('#myform').serialize(),   //your form name.it takes all the values of model
                         //        dataType: 'json',
                         //        success: function (result) {
                         //            console.log(result);
                         //        }
                         //    });
                         //   }

                        /* document.myform.submit();*/
                     }

                   /*  setDropDrownList(string type, int value, int SearchType)*/

                 });
               });

        $('input[type=radio][name=ReaderType]').change(function () {

                if (this.value == '1') {
                    //$("#Barcodediv").hide();
                    //$("#Scannerdiv").Show();
                    /*$('#Barcodediv').css('display', 'none');*/
                    document.myform.submit();
                }
                else if (this.value == '2') {

                    document.myform.submit();
                }
            });


        function OnSubmit()
        {
            var FromDeptId = document.getElementById("FromDeptId").value;
            /*var ToDeptId = document.getElementById("ToDeptId").value;*/
            //alert(FromDeptId);
            //alert(ToDeptId);
            document.getElementById("PostFlag").value = 1;
            if (FromDeptId != ToDeptId)
            {
                let confirmAction = confirm("@Resources.DefaultResource.DepatmentDiffTitle");
                if (confirmAction) {
                    //alert("Action successfully executed");
                    document.getElementById("PostFlag").value = 1;
                }
                else
                {
                    document.getElementById("PostFlag").value = 0;
                    //alert("Action canceled");
                }

            }
        }
        document.getElementById("Barcode").onkeydown = function (e) {

            const form = document.getElementById('myform');
            /* form.action = "LoadData";*/
            if (e.key === "Enter") {
                form.name = "CmdBarcode";
                form.value = "CmdBarcode";
                document.getElementById("PostFlag").value = 3;
                form.submit();
             /*   alert(e.key);*/
            }


        }
        //function KeyChanged(mytxt)
        //{
        //    alert(mytxt.value);
        //}
        $(function () {

            $("#StoreId").select2();
        });
        //$(function () {

        //    $("#EmpId").select2();
        //});
        
        //var form = $("#myform")
        //    .removeData("validator")
        //    .removeData("unobtrusiveValidation");

        //$.validator.unobtrusive.parse(form);

    </script>
    @*Display message to user*@
    @if (TempData["ErroMessage"] != null)
    {
<script type="text/javascript">

                alert('@TempData["ErroMessage"]');

</script>}
}


