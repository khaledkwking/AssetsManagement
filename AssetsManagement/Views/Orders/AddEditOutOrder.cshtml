@*@using  MultipleModelInOneView;*@

@model BOL.OutOrdersViewModel

@using PagedList.Mvc;
@using PagedList;
@using System.Configuration;

@{ //ViewBag.Title = @Html.Raw(Resources.DefaultResource.Rooms);
    Layout = "~/Views/Shared/_Layout.cshtml"; }
@*<h2>CarList</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<div class="kt-subheader   kt-grid__item" id="kt_subheader">
    <div class="kt-subheader__main">
        <h3 class="kt-subheader__title">
            @Html.Raw(Resources.DefaultResource.YOUAREHERE):

        </h3>
        <span class="kt-subheader__separator kt-hidden"></span>
        <div class="kt-subheader__breadcrumbs">

            <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-shelter"></i></a>
            <span class="kt-subheader__breadcrumbs-separator"></span>

            <a href="/Home/Index" class="kt-subheader__breadcrumbs-link">
                @Html.Raw(Resources.DefaultResource.Dashboard)
            </a>

            @*Url.Action("ItemsStockList", new { Page_No, EmpId = @ViewBag.EmpId,  Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })*@
            @if (@ViewBag.EmpId != null)
            {
                <span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("Employees", "HR", new { EmpId = @ViewBag.EmpId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.EmpName as string)
                </a>
                }

            @if (@ViewBag.DeptId != null)
            {
<span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("Departements", "HR", new { DeptId = @ViewBag.DeptId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.DeptName as string)
                </a>}
            @if (@ViewBag.RoomId != null)
            {
<span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("RoomsList", "Buildings", new { RoomId = @ViewBag.RoomId,StoreFlag=@ViewBag.StoreFlag,FloorId=@ViewBag.FloorId,BuildingId=ViewBag.BuildingId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.RoomName as string)
                </a>}


        </div>
    </div>
</div>

@using (Html.BeginForm("AddEditOutOrder", "Orders", FormMethod.Post, htmlAttributes: new { id = "myform", name = "myform", enctype = "multipart/form-data" }))
{
 @Html.AntiForgeryToken();
 @*@System.Web.Helpers.AntiForgery.Validate();*@

<div class="kt-content  kt-grid__item kt-grid__item--fluid" id="kt_content" >
    @* First source items *@
    <div class="row">

        <div class="col-6">
            <div class="kt-portlet kt-portlet--mobile">
                <div class="kt-portlet__head kt-portlet__head--lg">
                    <div class="kt-portlet__head-label">
                        <span class="kt-portlet__head-icon">
                            <i class="kt-font-brand flaticon2-checking"></i>
                        </span>
                        <h3 class="kt-portlet__head-title">
                            @Html.Raw(Resources.DefaultResource.OutOrderTitle)

                        </h3>

                    </div>
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">
                                @*<button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="Addbtn" onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'">
                                        <i class="la la-plus"></i>
                                        <span class="kt-nav__link-text">
                                            @Html.Raw(Resources.DefaultResource.NewRecord)
                                        </span>
                                    </button>*@
                                <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="Addbtn"
                                        onclick="location.href='@Url.Action("AddEditOutOrder", "Orders",new {Id=""})'">

                                    <i class="la la-plus"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.ClearItems)
                                    </span>
                                </button>
                                &nbsp;
                                <button name="CmdSave" type="submit" id="CmdSave" value="CmdSave" class="btn btn-success" formmethod="post" ValidationGroup="DML">
                                    <i class="fas fa-save"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.Save)
                                    </span>
                                </button>
                                @*<input id="CmdSave" value="@Html.Raw(Resources.DefaultResource.Save )" name="CmdSave" type="submit" onclick="OnSubmit()" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.TransferAsset)" data-toggle="@Html.Raw(Resources.DefaultResource.TransferAsset)" formaction="/Inventory/AssetItemsList" formmethod="post" ValidationGroup="DML" />*@
                            </div>
                        </div>

                    </div>

                </div>
                <div class="kt-portlet__body">
                    @Html.HiddenFor(m => m.DisplayMode, new { @class = "form-control hidden", id = "DisplayMode", name = "DisplayMode" })

                    @Html.HiddenFor(m => m.PostFlag, new { @class = "hidden", id = "PostFlag", name = "PostFlag" })
                    @Html.HiddenFor(m => m.SelectedItem.PictureName)
                    @Html.HiddenFor(m => m.CurOrderDate)
                    @Html.HiddenFor(m => m.EditMode)

                    @*<form method="post" id="ChangeEvent">*@
                    @*@Html.RadioButton("A1", "1", ViewData["IsSelected"] == "1", new { onclick = "document.getElementById('ChangeEvent').submit();" })*@
                    @*</form>*@
                    <div class="table-responsive" style="height:800px">
                        @*start of part of drowdawn lists*@
                        <div id="dropDownListdiv">
                            <div class="form-group row text-center">
                                @Html.Label("", Resources.DefaultResource.SearchBy, htmlAttributes: new { @class = "control-label col-4 col-4 HeadMenuItem" })

                                <div class="col-3">
                                    @Html.RadioButtonFor(m => m.SelectedItem.OrganizedFlag, "1", new { @class = "HeadMenuItem", onclick = " document.myform.submit();" })
                                    @Html.Label("Personal", Resources.DefaultResource.PersonalAsset, new { @class = "HeadMenuItem" })
                                </div>
                                <div class="col-3">

                                    @Html.RadioButtonFor(m => m.SelectedItem.OrganizedFlag, "2", new { @class = "HeadMenuItem ", onclick = " document.myform.submit();" })
                                    @Html.Label("Organization", Resources.DefaultResource.OrginzationalAsset, new { @class = "HeadMenuItem  text-start" })

                                </div>
                                <div class="col-2">
                                </div>
                            </div>
                            <div class="form-group row ">

                                @Html.Label("OutOrder", Resources.DefaultResource.VoucherNum, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-4">
                                    @Html.TextBoxFor(m => m.SelectedItem.OutOrderId, new { @class = "form-control", @readonly = "true" })
                                </div>

                                @Html.Label("lblOutOrderId", Resources.DefaultResource.FromInventory, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblOutOrderDate" })


                                <div class="col-4">
                                    @*@(m => m.SelectedItem. ?
                @Html.TextBoxFor(modelItem => Model.InOrdersDetails[i].Qty, new { @class = "form-control" })
                : @Html.TextBoxFor(modelItem => Model.InOrdersDetails[i].Qty, new { @class = "form-control" ,@disabled = "disabled" })*@

                                    @*@Html.TextBoxFor(m => m.EditMode)*@
                                    <div style="@(Model.EditMode == "Edit" ? "pointer-events:none" : "")">
                                        @Html.DropDownListFor(m => m.SelectedItem.StoreId, Model.Inventories, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", @required = "required", style = "width:100%;", id = "StoreId", name = "StoreId" })
                                        @Html.ValidationMessageFor(m => m.SelectedItem.StoreId, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })
                                    </div>


                                </div>

                            </div>

                            <div class="form-group row mt-5 ">

                                @Html.Label("lblOutOrderDate", Resources.DefaultResource.VoucherDate, new { @class = "col-2 col-form-label HeadMenuItem", Name = "lblOutOrderDate" })
                                <div class="col-4">

                                    @{ string ExpiredDate = "";
                                        if (Model.SelectedItem.OutOrderDate == null)
                                        {
                                            //ExpiredDate =;
                                        }
                                        else
                                        {
                                            ExpiredDate = Model.SelectedItem.OutOrderDate.Value.ToString("dd/MM/yyyy");
                                        } }
                                    <input type="text" id="SelectedItem.OutOrderDate" name="SelectedItem.OutOrderDate" value="@ExpiredDate" class="form-control date-picker" AutoComplete="Off" data-date-format="dd/mm/yyyy" required />
                                    @Html.ValidationMessageFor(m => m.SelectedItem.OutOrderDate, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })

                                    @*@Html.TextBoxFor(m => m.SelectedItem.OutOrderDate, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autocomplete = "off"})


                @Html.ValidationMessageFor(m => m.SelectedItem.OutOrderDate, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })*@

                                </div>

                            </div>




                            <div class="form-group row">

                                @Html.Label("lblFromEmpId", Resources.DefaultResource.EmpName, new { @class = "col-2 col-form-label HeadMenuItem" })

                                <div class="col-4" style="@(Model.EditMode == "Edit" ? "pointer-events:none" : "")">
                                    @Html.DropDownListFor(m => m.SelectedItem.EmpId, Model.FromEmployees, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "FromEmpId", name = "FromEmpId" })
                                </div>

                                @Html.Label("lblFromDeptId", Resources.DefaultResource.DeptTitle, new { @class = "col-2 col-form-label HeadMenuItem" })
                                <div class="col-4" style="@(Model.EditMode == "Edit" ? "pointer-events:none" : "")">
                                    @Html.DropDownListFor(m => m.SelectedItem.DeptId, Model.FromDepartments, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "FromDeptId", name = "FromDeptId" })
                                </div>



                            </div>
                            <div class="form-group row">
                                @Html.Label("FromRoomId", Resources.DefaultResource.RoomName, new { @class = "col-2 col-form-label HeadMenuItem" })
                                <div class="col-4" style="@(Model.EditMode == "Edit" ? "pointer-events:none" : "")">
                                    @Html.DropDownListFor(m => m.SelectedItem.RoomId, Model.FromRooms, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "RoomId", name = "RoomId" })
                                </div>

                                @Html.Label("OutOrder", Resources.DefaultResource.Notes, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-4">
                                    @Html.TextAreaFor(m => m.SelectedItem.Remarks, 2, 55, new { @class = "form-control" })

                                </div>

                            </div>
                            <div class="form-group row">

                                @Html.Label("lblNotesOrder", Resources.DefaultResource.NotesOther, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblNotesOrder" })
                                <div class="col-10">
                                    @Html.TextAreaFor(m => m.SelectedItem.Notes, 2, 55, new { @class = "form-control" })

                                </div>

                            </div>
                            <div class="form-group row" style="border:solid; border-width :1px; padding:5px;">


                                @Html.Label("FileName", Resources.DefaultResource.AttachmentFile, new { @class = "col-2 col-form-label HeadMenuItem" })
                                <div class="col-7 pull-right">

                                    <input type="file" name="postedFile" id="postedFile" onchange="fileCheck(this);" class="" />

                                </div>
                                <div class="col-3">
                                    <button id="CmdUpload" name="CmdUpload" type="submit" value="CmdUpload" data-toggle="kt-tooltip" title=" @Html.Raw(Resources.DefaultResource.UploadFile)" class="btn btn-success btn-icon-sm"
                                            formmethod="post">

                                        <i class="la la-upload"></i>
                                        <span class="kt-nav__link-text">
                                            @Html.Raw(Resources.DefaultResource.UploadFile)
                                        </span>
                                    </button>
                                    &nbsp;
                                    <button type="button" data-toggle="kt-tooltip" title="@Html.Raw(Resources.DefaultResource.ViewFile)" class="btn btn-info btn-primary btn-icon-sm" onclick="parent.open('@ConfigurationManager.AppSettings["OutOrdersPath"].ToString()@(Model.SelectedItem.PictureName!=null ? Model.SelectedItem.PictureName.ToString():"") ','_blank')">

                                        <i class="fa fa-eye"></i>
                                        <span class="kt-nav__link-text">
                                            @Html.Raw(Resources.DefaultResource.ViewFile)
                                        </span>
                                    </button>

                                    @*<input type="submit" value="Upload file" />*@
                                </div>

                                @*<a href="<%=ConfigurationManager.AppSettings[" ProjectsHTMLPath"].ToString() %>
                <%# Eval("FileName") %>" target="_blank" class="kt-widget4__title">
                <%# Session["SiteLanguage"].ToString() == "EnglishTheme" ? Eval("Caption") : Eval("CaptionAr") %>
            </a>*@

                            </div>

                        </div>
                        @*End of dropdown lists*@

                        <div id="DivMsg" class="ErrorMsglbl" runat="server">
                            @*check message error or warning*@
                            @if (TempData["Message"] != null)
                            {
            <div class="alert alert-success alert-dismissable" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                </button>
                @Html.Raw(Resources.DefaultResource.SaveMessage)
            </div>
            }
                            @if (TempData["warningMessage"] != null)
                            {
            <div class="alert alert-warning alert-dismissable" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                </button>

                @TempData["warningMessage"]

            </div>}

                        </div>
                        @if (Model != null)
                        {
        <table id="showtable" class="table table-striped table-bordered table-hover table-checkable">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                        @Html.Raw(Resources.DefaultResource.No)
                    </th>


                    <th>
                        @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                        @Html.Raw(Resources.DefaultResource.ID)
                    </th>


                    <th>
                        @Html.Raw(Resources.DefaultResource.TitleAr)
                        @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                    </th>
                    <th>

                        @Html.Raw(Resources.DefaultResource.RFID)
                    </th>

                    <th>

                        @Html.Raw(Resources.DefaultResource.Barcode)
                    </th>

                    <th>

                        @Html.Raw(Resources.DefaultResource.RequiredQty)
                    </th>

                    <th>

                        @Html.Raw(Resources.DefaultResource.CurrentInQuantity)
                    </th>
                    <th>

                        @Html.Raw(Resources.DefaultResource.InStoreItemQty)
                    </th>
                    <th>

                        @Html.Raw(Resources.DefaultResource.Quantity)
                    </th>
                    <th>

                        @Html.Raw(Resources.DefaultResource.ItemPrice)
                    </th>
                    <th width="8%">
                        @Html.Raw(Resources.DefaultResource.Actions)
                    </th>


                </tr>
            </thead>

            @*@foreach (var item in Model.OutOrdersDetails)*@
            @{ int sno = 0; }
            @for (int i = 0; i < Model.OutOrdersDetails.Count; i++)
            {@*@for (int i = 0; i < Model.SelectedItem.OutOrdersDetials.Count; i++)*@

        <tr>
            @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].OutOrderDetId)
            @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].StockId)
            @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].StoreId)
            @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].StockDetId)
            @*@Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].CostPrice)*@
            <td>
                @{ sno++; }
                @sno

            </td>

            <td>
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].ItemId)
                @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].ItemId)
            </td>

            <td>
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].tbl_ItemsStock.Item_tbl.Item_Name)
            </td>
            <td style="word-break: break-all;">
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].Item_RFID)
                @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].Item_RFID)
            </td>
            <td style="word-break: break-all;">
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].Item_BarCode)
                @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].Item_BarCode)
            </td>
            @*<td>
         @Html.DisplayFor(modelItem => item.Item_RFID)
        </td>*@
            <td>
                @(Model.OutOrdersDetails[i].tbl_ItemsStock.Item_tbl.CountableFlag ?
                               @Html.TextBoxFor(modelItem => Model.OutOrdersDetails[i].Qty, new { @class = "form-control" })
                               : @Html.TextBoxFor(modelItem => Model.OutOrdersDetails[i].Qty, new { @class = "form-control" ,@disabled = "disabled" })
                     )
                @*@Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].Qty)*@
                @*@Html.TextBoxFor(modelItem => Model.OutOrdersDetails[i].Qty, new { @class = "form-control" })*@

            </td>


            <td>
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].InStoreQty)
                @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].InStoreQty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].InStoreItemQty)
                @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].InStoreItemQty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].tbl_ItemsStock.ItemQty)
                @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].tbl_ItemsStock.ItemQty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.OutOrdersDetails[i].CostPrice )
                @Html.HiddenFor(modelItem => Model.OutOrdersDetails[i].CostPrice)
            </td>
            <td width="8%">
                <button id="CmdDel" name="CmdDel" type="submit" value="CmdDel" data-toggle="kt-tooltip" title=" @Html.Raw(Resources.DefaultResource.Delete)" class="btn btn-outline-danger btn-sm btn-icon"
                        formaction="/Orders/AddEditOutOrder/@i" formmethod="post" onclick="return confirm('@Html.Raw(Resources.DefaultResource.DelMessage)');">
                    <i class="la la-close"></i>
                </button>
            </td>
        </tr>
}
        </table> @*<div class="paginationCust pagedList">

                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager((PagedList.IPagedList)Model.SelectedItem.OutOrdersDetials, Page_No => Url.Action("AddEditOutOrder", new { Page_No, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })
                         , PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>*@}


                    </div>


                </div>
            </div>
        </div>

        @* End of First Source items *@
        @* second target items *@


        <div class="col-6">
            <div class="kt-portlet kt-portlet--mobile">
                <div class="kt-portlet__head kt-portlet__head--lg">
                    <div class="kt-portlet__head-label">
                        <span class="kt-portlet__head-icon">
                            <i class="kt-font-brand flaticon2-checking"></i>
                        </span>
                        <h3 class="kt-portlet__head-title">
                            @Html.Raw(Resources.DefaultResource.ReaderData)

                        </h3>

                    </div>
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">

                                <button name="CmdScan" type="submit" value="Scan" class="btn btn-success btn-primary btn-icon-sm" id="Scanbtn" formmethod="post" ValidationGroup="DML">
                                    @*onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'"*@
                                    <i class="la la-crosshairs"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.ScanReader)
                                    </span>
                                </button>

                                <button name="CmdAdd" type="submit" value="AddItem" class="btn btn-info btn-primary btn-icon-sm" id="Addbtn" formmethod="post" ValidationGroup="DML">
                                    @*onclick="location.href='@Url.Action("AddEditItemStock", "Inventory")'"*@
                                    <i class="fa fa-cart-plus"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.AddItemTitle)
                                    </span>
                                </button>
                                @*<input id="CmdSave" value="@Html.Raw(Resources.DefaultResource.Save )" name="CmdSave" type="submit" onclick="OnSubmit()" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.TransferAsset)" data-toggle="@Html.Raw(Resources.DefaultResource.TransferAsset)" formaction="/Inventory/AssetItemsList" formmethod="post" ValidationGroup="DML" />*@
                            </div>
                        </div>

                    </div>

                </div>
                <div class="kt-portlet__body">

                    <div id="DivMsg" class="ErrorMsglbl" runat="server">
                        @*check message error or warning*@
                        @if (TempData["ScannerMessage"] != null)
                        {
        <div class="alert alert-warning alert-dismissable" role="alert">
            @TempData["ScannerMessage"]
        </div>}
                    </div>

                    <div id="ChooseListdiv">
                        <div class="form-group row text-center">
                            @Html.Label("", Resources.DefaultResource.ReaderBarcodeTitle, htmlAttributes: new { @class = "control-label col-4 HeadMenuItem" })

                            <div class="col-3">
                                @Html.RadioButtonFor(m => m.ReaderType, "1", new { @class = "HeadMenuItem" })
                                @Html.Label("lblScanner", Resources.DefaultResource.ReaderTitle, new { @class = "HeadMenuItem text-start" })
                            </div>
                            <div class="col-3">

                                @Html.RadioButtonFor(m => m.ReaderType, "2", new { @class = "HeadMenuItem " })
                                @Html.Label("lblBarCode", Resources.DefaultResource.BarCodeTitle, new { @class = "HeadMenuItem  text-start" })

                            </div>

                        </div>
                    </div>
                    <div id="Barcodediv" style="display:@(Model.ReaderType == 2 ? "normal" : "none") ">
                        <div class="form-group row ">

                            @Html.Label("OutOrder", Resources.DefaultResource.Barcode, new { @class = "col-2 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                            <div class="col-8">
                                @Html.TextBoxFor(m => m.Barcode, new { @class = "form-control" , id = "Barcode", name = "Barcode" }) @*onkeypress = "javascript: KeyChanged( this );"*@
                            </div>

                        </div>
                    </div>

                    <div class="table-responsive" style="height:800px; display:@(Model.ReaderType == 1 ? "normal" : "none")" id="Scannerdiv">

                        @if (Model != null)
                        {
        <table id="myTable" class="table table-striped table-bordered table-hover table-checkable">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                        @Html.Raw(Resources.DefaultResource.ID)
                    </th>


                    <th>
                        @Html.Raw(Resources.DefaultResource.TitleAr)
                        @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                    </th>
                    <th>

                        @Html.Raw(Resources.DefaultResource.RFID)
                    </th>

                    <th>

                        @Html.Raw(Resources.DefaultResource.SerialOrBarcode)
                    </th>

                    <th>

                        @Html.Raw(Resources.DefaultResource.CountableTitle)
                    </th>

                    <th>

                        @Html.Raw(Resources.DefaultResource.Quantity)
                    </th>

                    <th>

                        @Html.Raw(Resources.DefaultResource.RoomOrStore)
                    </th>
                    <th>

                        @Html.Raw(Resources.DefaultResource.ItemStatus)
                    </th>

                    <th width="10%">
                        @Html.Raw(Resources.DefaultResource.Actions)
                        <input type="checkbox"  id="myCheckAll" title=@Html.Raw(Resources.DefaultResource.Actions) />
                    </th>


                </tr>
            </thead>


            @*@foreach (var item in Model.ItemsStock)*@
            @if (Model.ScanItems != null)
            {
                for (int i = 0; i < Model.ScanItems.Count; i++)
                {
<tr>
    @Html.HiddenFor(modelItem => Model.ScanItems[i].Room_Id)
    @*@Html.HiddenFor(modelItem => Model.ScanItems[i].StockId)*@

    @Html.HiddenFor(modelItem => Model.ScanItems[i].Item_Id)
    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].StockId)
        @Html.HiddenFor(modelItem => Model.ScanItems[i].StockId)

        @*@Html.TextBoxFor(x => Model.ScanItems[i].StockId, new { @class = "form-control", @readonly = "readonly", @name = i })*@
        @*<input type="text" name="@Model.ScanItems[i].StockId" id="@Model.ScanItems[i].StockId" value="@Model.ScanItems[i].StockId" />*@
    </td>

    <td>

        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_tbl.Item_Name)

    </td>
    <td style="word-break: break-all;">
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_RFID)
        @Html.HiddenFor(modelItem => Model.ScanItems[i].Item_RFID)
        @*@Html.EditorFor(modelItem => Model.ScanItems[i].Item_RFID)*@
    </td>
    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_BarCode)
    </td>
    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Item_tbl.CountableFlag)
    </td>
    <td class="@(Model.ScanItems[i].ItemQty <= (Model.ScanItems[i].Item_Stock_Limit==null? 0 : Model.ScanItems[i].Item_Stock_Limit )? "TxtCenter  btn-danger" : "TxtCenter")" title="@Resources.DefaultResource.ItemQtyOutLimitTitle">
        @Html.DisplayFor(modelItem => Model.ScanItems[i].ItemQty)
        @Html.HiddenFor(modelItem => Model.ScanItems[i].ItemQty)
    </td>

    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Room_tbl.Room_Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => Model.ScanItems[i].Status.AName)
    </td>

    <td width="10%" class="TxtCenter">
        @Html.CheckBoxFor(modelItem => Model.ItemsScanCheckList[i].IsSelected)
        @Html.HiddenFor(modelItem => Model.ItemsScanCheckList[i].Name,new { @Value = Model.ItemsScanCheckList[i].Name })
        @Html.HiddenFor(modelItem => Model.ItemsScanCheckList[i].Id, new { @Value = Model.ItemsScanCheckList[i].Id })

    </td>
</tr>
}
}

        </table> @*<div class="paginationCust pagedList">

                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager((PagedList.IPagedList)Model.ScanItems, Page_No => Url.Action("AddEditOutOrder", new { Page_No,  Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })
                    , PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>*@}

                    </div>
                </div>
            </div>
        </div>
    </div>
    @* End of second target items *@

</div>}
@*<script defer src="~/Scripts/jquery.min.js"></script>*@
<script defer src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
@section scripts
    {
    <script type="text/javascript">
       

            $("#FromEmpId").val(@Model.FromEmpId).trigger('change');
              @*alert(@Model.FromDeptId);*@

            $("#FromDeptId").val(@Model.FromDeptId).trigger('change');

            $("#FromRoomId").val(@Model.FromRoomId).trigger('change');



        //alert(document.getElementsByName("OrganizedFlag").value);
        // Begin :: function when change select From Part
               $(function () {

                 $("#dropDownListdiv").on("change", "select", function () {

                     var value = $(this).val();
                     var id = $(this).attr("id");
                       /*alert(id);*/
                     if (id != 'ActionType') {
                         document.getElementById("DisplayMode").value = id;
                        
                         const form = document.getElementById('myform');
                        /* form.action = "LoadData";*/
                         form.name = "submit";
                         form.value = "submit";
                         document.getElementById("PostFlag").value = 6;
                         form.submit();

                        /* document.myform.submit();*/

                         //SetTempData();
                         //function SetTempData() {
                         //    $.ajax({
                         //        type: "POST",
                         //        url: '/Inventory/SetTempData',     //your action
                         //        data: $('#myform').serialize(),   //your form name.it takes all the values of model
                         //        dataType: 'json',
                         //        success: function (result) {
                         //            console.log(result);
                         //        }
                         //    });
                         //   }

                        /* document.myform.submit();*/
                     }

                   /*  setDropDrownList(string type, int value, int SearchType)*/

                 });
               });

        $('input[type=radio][name=ReaderType]').change(function () {

                if (this.value == '1') {
                    //$("#Barcodediv").hide();
                    //$("#Scannerdiv").Show();
                    /*$('#Barcodediv').css('display', 'none');*/
                    document.getElementById("PostFlag").value = 5;
                    
                }
                else if (this.value == '2') {
                    document.getElementById("PostFlag").value = 4;
                    
                }
            document.myform.submit();
        });

        // End :: function when change select From Part

        // Begin :: function when change select To Part
        //$(function () {

        //    $("#dropDownListdivTo").on("change", "select", function () {
        //        var value = $(this).val();
        //        var id = $(this).attr("id");
        //       /* alert(id);*/
        //        document.getElementById("ToDisplayMode").value = id;

        //        document.myform.submit();
        //         });
        //});

        // End :: function when change select From Part

        function OnSubmit()
        {
            var FromDeptId = document.getElementById("FromDeptId").value;
            /*var ToDeptId = document.getElementById("ToDeptId").value;*/
            //alert(FromDeptId);
            //alert(ToDeptId);
            document.getElementById("PostFlag").value = 1;
            if (FromDeptId != ToDeptId)
            {
                let confirmAction = confirm("@Resources.DefaultResource.DepatmentDiffTitle");
                if (confirmAction) {
                    //alert("Action successfully executed");
                    document.getElementById("PostFlag").value = 1;
                }
                else
                {
                    document.getElementById("PostFlag").value = 0;
                    //alert("Action canceled");
                }

            }
        }
        document.getElementById("Barcode").onkeydown = function (e) {

            const form = document.getElementById('myform');
            /* form.action = "LoadData";*/
            if (e.key === "Enter") {
                form.name = "CmdBarcode";
                form.value = "CmdBarcode";
                document.getElementById("PostFlag").value = 3;
                form.submit();
           
             /*   alert(e.key);*/
            }


        }
       
       
        $(function () {

            $("#FromEmpId").select2();
            $("#StoreId").select2();
            $("#FromDeptId").select2();
           
            $("#RoomId").select2();
            
            
        });

        //var form = $("#myform")
        //    .removeData("validator")
        //    .removeData("unobtrusiveValidation");

        //$.validator.unobtrusive.parse(form);



        function fileCheck(obj) {
            var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp','pdf'];
            if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp','.pdf' formats are allowed.");
            }
        }

        $('#myCheckAll').click(function () {
            var chk = $(this).is(':checked');

            var cnt = $('input[type=checkbox]', "#myTable").length;
            $('input[type=checkbox]', "#myTable").each(function () {
                //var sub = "ItemsScanCheckList";
                           
                /* alert($(this).attr('name').indexOf('ItemsScanCheckList'));*/
                /* alert($(this).attr('name'));*/
                if ($(this).attr('name') != undefined) {
                    if (chk) {
                        $(this).attr('checked', 'checked');
                    }
                    else {
                        $(this).removeAttr('checked');
                    }
                }
            });
        });

        //$(function () {
        //    $("#Barcode").focus();
        //});

        //window.onload = function ()
        //{
        //    var txtBox = document.getElementById("Barcode");
        //    if (txtBox != null) {
        //        txtBox.focus();
        //        alert("focus");
        //    }
        //};
       


    </script>
    @*Display message to user*@
    @if (TempData["ErroMessage"] != null)
    {
        <script type="text/javascript">

                        alert('@TempData["ErroMessage"]');

        </script>
        }
}


