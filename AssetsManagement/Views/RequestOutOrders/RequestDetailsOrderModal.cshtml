
@model BOL.RequestOrdersDetailsViewModel
@using PagedList.Mvc;
@using PagedList;

@{  ViewBag.Title = @Html.Raw(Resources.DefaultResource.RequestOrders);
     }


<div id="EditModal" class="modal-content">
    <div class="modal-header">

        <span class="kt-portlet__head-icon">
            <i class="kt-font-brand flaticon2-checking"></i>
        </span>
        <h3 class="modal-title" id="exampleModalLabel">
            @Html.Raw(Resources.DefaultResource.RequestOrders)
        </h3>
        <button type="button" class="close" data-dismiss="modal" onclick="CheckChecked();" aria-label="Close">
            <span class="fa fa-close"></span>
        </button>

    </div>
    <div class="modal-body">
        <div class="kt-portlet kt-portlet--mobile">
            <div class="kt-portlet__body">
                @*<div class="table-responsive">*@
                <div class="row">
                    <div class="col-sm-6 pull-right">
                        <nav class="navbar buttonsNavBar">
                            <div class="container-fluid">
                                <ul class="nav nav-pills">
                                    <li id="Li1" class="active pull-right">
                                        <button type="button" id="CmdClose" onclick="CheckChecked();" value="@Html.Raw(Resources.DefaultResource.Cancel)" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.Cancel)" data-dismiss="modal">@Html.Raw(Resources.DefaultResource.Cancel)</button>
                                    </li>
                                    <text>&nbsp;</text>
                                </ul>
                            </div>
                        </nav>
                    </div>
                </div>

                @if (Model != null)
                {
            <table id="showtable" class="table table-striped table-bordered table-hover table-checkable">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                            @Html.ActionLink(Resources.DefaultResource.ID, "AddEditRequestOutOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                        </th>


                        <th>
                            @Html.ActionLink(Resources.DefaultResource.ItemName, "AddEditRequestOutOrder", new { Sorting_Order = ViewBag.SortingModel, Filter_Value = ViewBag.FilterValue })
                            @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                        </th>

                        <th>

                            @Html.Raw(Resources.DefaultResource.CountableTitle)
                        </th>

                        <th>

                            @Html.ActionLink(Resources.DefaultResource.RequiredQty, "AddEditRequestOutOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                        </th>
                      

                       

                    </tr>
                </thead>


                @*@foreach (var item in Model.ItemsStock)*@
                @{ int sno = 0; }
            @if (Model.RequestOrdersDetails != null)
            {


            for (int i = 0; i < Model.RequestOrdersDetails.Count; i++)
            {
            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].ItemId)
            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].ReqOrderId)
            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].ReqOrderDetId)
            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].StoreId)
            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].StockId)
            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].MasterItemFalg)
            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].CountableFlag)


            <tr @(Model.RequestOrdersDetails[i].CountableFlag != null ? (!Model.RequestOrdersDetails[i].CountableFlag.Value ? "class=Red-Font-Color" : "") : "")>

            <td>
            @Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].ReqOrderDetId)

            </td>
            <td style="">
            @Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].Item_tbl.Item_Name)

            </td>

            <td>
            @Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].Item_tbl.CountableFlag)
            </td>

            <td class="TxtCenter" title="@Resources.DefaultResource.RequiredQty">
            
            @Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].Qty)
            </td>
   

           


            </tr>}
            }

            </table>} 
</div>

        </div>

    </div>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
        <script type="text/javascript">
            function CheckChecked() {
                $('#showmodal').modal('hide');

            }

            var form = $("#myform")
                .removeData("validator")
                .removeData("unobtrusiveValidation");

            $.validator.unobtrusive.parse(form);

        </script>



</div>



