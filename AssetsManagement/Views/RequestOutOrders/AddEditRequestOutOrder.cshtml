@*@using  MultipleModelInOneView;*@

@model BOL.RequestOutOrdersViewModel


@using PagedList.Mvc;
@using PagedList;
@using System.Configuration;

@{ //ViewBag.Title = @Html.Raw(Resources.DefaultResource.Rooms);
    Layout = "~/Views/Shared/_Layout.cshtml"; }
@*<h2>CarList</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<div class="kt-subheader   kt-grid__item" id="kt_subheader">
    <div class="kt-subheader__main">
        <h3 class="kt-subheader__title">
            @Html.Raw(Resources.DefaultResource.YOUAREHERE):

        </h3>
        <span class="kt-subheader__separator kt-hidden"></span>
        <div class="kt-subheader__breadcrumbs">

            <a href="#" class="kt-subheader__breadcrumbs-home"><i class="flaticon2-shelter"></i></a>
            <span class="kt-subheader__breadcrumbs-separator"></span>

            <a href="/Home/Index" class="kt-subheader__breadcrumbs-link">
                @Html.Raw(Resources.DefaultResource.Dashboard)
            </a>

            @*Url.Action("ItemsStockList", new { Page_No, EmpId = @ViewBag.EmpId,  Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue })*@
            @if (@ViewBag.EmpId != null)
            {
                <span class="kt-subheader__breadcrumbs-separator"></span>
                <a href='@Url.Action("Employees", "HR", new { EmpId = @ViewBag.EmpId })' class="kt-subheader__breadcrumbs-link">
                    @Html.Raw(ViewBag.EmpName as string)
                </a>}

        </div>
    </div>
</div>
@using (Html.BeginForm("AddEditRequestOutOrder", "RequestOutOrders", FormMethod.Post, htmlAttributes: new { id = "myform", name = "myform", enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken();
<div class="kt-content  kt-grid__item kt-grid__item--fluid" id="kt_content">
    @* First source items *@
    <div class="row">

        <div class="col-12">
            <div class="kt-portlet kt-portlet--mobile">
                <div class="kt-portlet__head kt-portlet__head--lg">
                    <div class="kt-portlet__head-label">
                        <span class="kt-portlet__head-icon">
                            <i class="kt-font-brand flaticon2-checking"></i>
                        </span>
                        <h3 class="kt-portlet__head-title">
                            @Html.Raw(Resources.DefaultResource.RequestOrders)

                        </h3>

                    </div>
                    <div class="kt-portlet__head-toolbar">
                        <div class="kt-portlet__head-wrapper">
                            <div class="kt-portlet__head-actions">

                                @*@if (Session["RoleID"] != null)
            {
                if (Session["RoleID"].ToString() == BOL.DataModel.SecretaryRole.ToString() || Session["RoleID"].ToString() == BOL.DataModel.SuperAdminRole.ToString())
                {
        <button type="button" class="btn btn-brand btn-elevate btn-icon-sm" id="Addbtn"
                onclick="location.href='@Url.Action("AddEditRequestOutOrder", "RequestOutOrders", new { Id = "" })'">

            <i class="la la-plus"></i>
            <span class="kt-nav__link-text">
                @Html.Raw(Resources.DefaultResource.ClearItems)
            </span>
        </button> @:&nbsp;
             }
            }*@

                                <button name="CmdSave" type="submit" id="CmdSave" value="CmdSave" class="btn btn-success" formmethod="post" ValidationGroup="DML">
                                    <i class="fas fa-save"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.Save)
                                    </span>
                                </button> &nbsp;
                                @if (Session["RoleID"] != null)
                                {
                                    if (Session["RoleID"].ToString() != BOL.DataModel.SecretaryRole.ToString())
                                    {
                                <button name="CmdReject" type="submit" id="CmdReject" value="CmdReject" class="btn btn-danger" formmethod="post" ValidationGroup="DML">
                                    <i class="fas fa-address-book"></i>
                                    <span class="kt-nav__link-text">
                                        @Html.Raw(Resources.DefaultResource.RejectTitle)
                                    </span>
                                </button> @:&nbsp;
                                    }
                                }


                                                    @if (Session["RoleID"] != null)
                                                    {
                                                        if (Session["RoleID"].ToString() == BOL.DataModel.Inventory_ManagerRole.ToString())
                                                        {
                            <button name="CmdManager" type="submit" id="CmdManager" value="CmdManager" class="btn btn-primary" formmethod="post" ValidationGroup="DML">
                                <i class="fas fa-window-restore"></i>
                                <span class="kt-nav__link-text">
                                    @Html.Raw(Resources.DefaultResource.ManagerConfirm)
                                </span>
                            </button>
                                                            @:&nbsp;
                                                        }
                                                    }

                                                                            @if (Session["RoleID"] != null)
                                                                            {
                                                                                if (Session["RoleID"].ToString() == BOL.DataModel.SupervisorRole.ToString() || Session["RoleID"].ToString() == BOL.DataModel.SuperAdminRole.ToString())
                                                                                {
                                                    <button name="CmdSupervisor" type="submit" id="CmdSupervisor" value="CmdSupervisor" class="btn btn-warning" formmethod="post" ValidationGroup="DML">
                                                        <i class="fas fa-address-book"></i>
                                                        <span class="kt-nav__link-text">
                                                            @Html.Raw(Resources.DefaultResource.SupervisorConfirm)
                                                        </span>
                                                    </button> @:&nbsp;
                                                }
                                            }

                                                                                                    @if (Session["RoleID"] != null)
                                                                                                    {
                                                                                                        if (Session["RoleID"].ToString() == BOL.DataModel.StorekeeperRole.ToString() || Session["RoleID"].ToString() == BOL.DataModel.SuperAdminRole.ToString())
                                                                                                        {
                                                                            <button name="CmdSKeeper" type="submit" id="CmdSKeeper" value="CmdSKeeper" class="btn btn-danger" formmethod="post" ValidationGroup="DML">
                                                                                <i class="fas fa-file-import"></i>
                                                                                <span class="kt-nav__link-text">
                                                                                    @Html.Raw(Resources.DefaultResource.StoreKeeperConfirm)
                                                                                </span>
                                                                            </button> }
                                                                    } @*<input id="CmdSave" value="@Html.Raw(Resources.DefaultResource.Save )" name="CmdSave" type="submit" onclick="OnSubmit()" class="btn btn-success" title="@Html.Raw(Resources.DefaultResource.TransferAsset)" data-toggle="@Html.Raw(Resources.DefaultResource.TransferAsset)" formaction="/Inventory/AssetItemsList" formmethod="post" ValidationGroup="DML" />*@
                                                                                                                        </div>
                        </div>

                    </div>

                </div>
                <div class="table-responsive" style="min-height:900px">
                    <div class="kt-portlet__body">
                        @*@Html.Label("lblOutOrderDate", Resources.DefaultResource.VoucherDate, new { @class = "col-1 col-form-label HeadMenuItem", Name = "lblOutOrderDate" })
                        <div class="col-3">

                            @{ string ExpiredDate = "";
                                if (Model.SelectedItem.ReqOrderDate == null)
                                {
                                    //ExpiredDate =;
                                }
                                else
                                {
                                    ExpiredDate = Model.SelectedItem.ReqOrderDate.Value.ToString("dd/MM/yyyy");
                                } }
                            <input type="text" id="SelectedItem.ReqOrderDate" name="SelectedItem.ReqOrderDate" value="@ExpiredDate" class="form-control date-picker" AutoComplete="Off" data-date-format="dd/mm/yyyy" required />
                            @Html.ValidationMessageFor(m => m.SelectedItem.ReqOrderDate, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })

                        </div>*@
                        @*start of part of drowdawn lists*@
                        <div id="dropDownListdivold">

                            <div class="form-group row ">

                                @Html.HiddenFor(modelItem => Model.SelectedItem.ReqStatusId)
                                @Html.HiddenFor(m => m.DisplayMode, new { @class = "form-control hidden", id = "DisplayMode", name = "DisplayMode" })

                                @*@Html.Label("lblReqOrderId", Resources.DefaultResource.VoucherNum, new { @class = "col-1 col-form-label HeadMenuItem ", Name = "lblOutOrder" })*@
                              
                                    @Html.HiddenFor(m => m.SelectedItem.ReqOrderId, new { @class = "form-control", @readonly = "true" })
                                    @Html.HiddenFor(m => m.SelectedItem.ReqOrderDate, new { @class = "form-control", @readonly = "true" })
                               



                                @Html.Label("lblDeptTitle", Resources.DefaultResource.DeptTitle, new { @class = "col-1 col-form-label HeadMenuItem" })
                                <div class="col-3">

                                    @Html.DropDownListFor(m => m.SelectedItem.DeptId, Model.DeptsList, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", @required = "required", style = "width:100%;", id = "DeptId", name = "DeptId" })
                                    @Html.ValidationMessageFor(m => m.SelectedItem.DeptId, Resources.DefaultResource.RequiredField, new { @class = "text-danger" })
                                </div>

                                @Html.Label("lblLocationId", Resources.DefaultResource.Location, new { @class = "col-1 col-form-label HeadMenuItem" })
                                <div class="col-3">
                                    @Html.DropDownListFor(m => m.SelectedItem.LocationId, Model.LocationsList, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", @required = "required", style = "width:100%;", id = "LocationId", name = "LocationId" })
                                    @Html.ValidationMessageFor(m => m.SelectedItem.LocationId, Resources.DefaultResource.RequiredField, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row mt-5 ">



                                @if (Session["RoleID"] != null)
                                {

                                    if (Session["RoleID"].ToString() == BOL.DataModel.Inventory_ManagerRole.ToString()|| Session["RoleID"].ToString() == BOL.DataModel.StorekeeperRole.ToString() || Session["RoleID"].ToString() == BOL.DataModel.SuperAdminRole.ToString())
                                    {
                    @Html.Label("lblDeptTitle", Resources.DefaultResource.InventoryName, new { @class = "col-1 col-form-label HeadMenuItem" })
                                            <div class="col-3">
                                                <div id="dropDownListdiv">
                                                    @Html.DropDownListFor(m => m.SelectedItem.StoreId, Model.StoresList, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", @required = "required", style = "width:100%;", id = "StoreId", name = "StoreId" })
                                                    @Html.ValidationMessageFor(m => m.SelectedItem.StoreId, Resources.DefaultResource.RequiredField, new { @class = "text-danger" })
                                                </div>
                                            </div> }
                                                                else
                                                                {
                                                                    @Html.HiddenFor(modelItem => Model.SelectedItem.StoreId)
                                                                }
                                                            }
                                @Html.Label("OutOrder", Resources.DefaultResource.Notes, new { @class = "col-1 col-form-label HeadMenuItem ", Name = "lblOutOrder" })
                                <div class="col-5">
                                    @Html.TextAreaFor(m => m.SelectedItem.Notes, 2, 55, new { @class = "form-control" })

                                </div>


                            </div>


                        </div>
                        @*End of dropdown lists*@

                    <div id="DivMsg" class="ErrorMsglbl" runat="server">
                        @*check message error or warning*@
                        @if (TempData["Message"] != null)
                        {
                    <div class="alert alert-success alert-dismissable" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                        </button>
                        @Html.Raw(Resources.DefaultResource.SaveMessage)
                    </div>}
                        @if (TempData["warningMessage"] != null)
                        {
                    <div class="alert alert-warning alert-dismissable" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                        </button>

                        @TempData["warningMessage"]

                    </div>}

                        @if (TempData["ScannerMessage"] != null)
                        {
                    <div class="alert alert-warning alert-dismissable" role="alert">
                        @TempData["ScannerMessage"]
                    </div>}
                    </div>



                        <div class="table-responsive" style="height:900px;" id="Scannerdiv">

                            @if (Session["RoleID"] != null)
                            {

                                if (Session["RoleID"].ToString() == BOL.DataModel.SecretaryRole.ToString() || Session["RoleID"].ToString() == BOL.DataModel.SuperAdminRole.ToString())
                                {
                    <div class="form-group row ">
                        @Html.Label("OutOrder", Resources.DefaultResource.ItemName, new { @class = "col-1 form-label HeadMenuItem ", Name = "lblOutOrder" })
                        <div class="col-3">

                            @Html.DropDownListFor(m => m.SelItemId, Model.Items, Resources.DefaultResource.ListChoose, new { @class = "form-select-lg", style = "width:100%;", id = "SelItemId", name = "SelItemId" })
                            @*@Html.ValidationMessageFor(m => m.SelItemId, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })*@
                        </div>

                        @Html.Label("OutOrder", Resources.DefaultResource.RequiredQty, new { @class = "col-1 form-label HeadMenuItem ", Name = "lblOutOrder" })
                        <div class="col-3">

                            @Html.TextBoxFor(m => m.SelQty, new { @class = "form-control" })

                            @*@Html.ValidationMessageFor(m => m.SelQty, Resources.DefaultResource.RequiredMessage, new { @class = "text-danger" })*@

                        </div>
                        <div class="col-3">
                            <button id="SelNewItem" name="SelNewItem" type="submit" value="SelNewItem" data-bs-toggle="kt-tooltip" title='@Resources.DefaultResource.AddNewItem' class="btn btn-brand btn-elevate btn-icon-sm"
                                    formmethod="post">
                                <i class="fa fa-plus">  </i>
                                <span class="kt-nav__link-text">
                                    @Html.Raw(Resources.DefaultResource.AddNewItem)
                                </span>
                            </button>
                        </div>
                    </div>}
                                    }


                            @if (Model != null)
                            {
                    <table id="showtable" class="table table-striped table-bordered table-hover table-checkable">
                        <thead class="thead-dark">
                            <tr>
                                <th>
                                    @*@Html.Raw(Resources.DefaultResource.CarNo)*@
                                    @Html.ActionLink(Resources.DefaultResource.ID, "AddEditRequestOutOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                </th>


                                <th>
                                    @Html.ActionLink(Resources.DefaultResource.ItemName, "AddEditRequestOutOrder", new { Sorting_Order = ViewBag.SortingModel, Filter_Value = ViewBag.FilterValue })
                                    @*@Html.Raw(Resources.DefaultResource.CarModel)*@
                                </th>

                                <th>

                                    @Html.Raw(Resources.DefaultResource.CountableTitle)
                                </th>

                                <th>

                                    @Html.ActionLink(Resources.DefaultResource.RequiredQty, "AddEditRequestOutOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                </th>
                                <th>

                                    @Html.ActionLink(Resources.DefaultResource.InventoryName, "AddEditRequestOutOrder", new { Sorting_Order = ViewBag.SortingName, Filter_Value = ViewBag.FilterValue })
                                </th>

                                <th width="6%">
                                    @Html.Raw(Resources.DefaultResource.Actions)

                                </th>


                            </tr>
                        </thead>


                        @*@foreach (var item in Model.ItemsStock)*@
                        @{ int sno = 0; }
                        @if (Model.RequestOrdersDetails != null)
                        {


                            for (int i = 0; i < Model.RequestOrdersDetails.Count; i++)
                            {
@Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].ItemId)
@Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].ReqOrderId)
@Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].ReqOrderDetId)
@Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].StoreId)
@Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].StockId)
@Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].MasterItemFalg)
@Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].CountableFlag)


                    <tr @(Model.RequestOrdersDetails[i].CountableFlag != null ? (!Model.RequestOrdersDetails[i].CountableFlag.Value ? "class=Red-Font-Color" : "") : "")>

                        <td>
                            @Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].ReqOrderDetId)

                        </td>
                        <td style="">
                            @Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].Item_tbl.Item_Name)

                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].Item_tbl.CountableFlag)
                        </td>

                        <td class="TxtCenter" title="@Resources.DefaultResource.RequiredQty">
                            <div>
                                @*@Html.DisplayFor(modelItem => Model.RequestOrdersDetails[i].Qty)*@
                                @Html.TextBoxFor(modelItem => Model.RequestOrdersDetails[i].Qty, new { @class = "form-control" })
                            </div>
                            @Html.HiddenFor(modelItem => Model.RequestOrdersDetails[i].Qty)
                        </td>
                        <td>
                            @if (Model.RequestOrdersDetails[i].tbl_ItemsStock != null)
                            {
                    @Html.Raw(Model.RequestOrdersDetails[i].tbl_ItemsStock.Room_tbl.Room_Name);
                }
                        </td>

                        <td width="10%" class="TxtCenter">
                            <button id="CmdDel" name="CmdDel" type="submit" value="CmdDel" data-toggle="kt-tooltip" title=" @Html.Raw(Resources.DefaultResource.Delete)" class="btn btn-outline-danger btn-sm btn-icon"
                                    formaction="/RequestOutOrders/AddEditRequestOutOrder/@i" formmethod="post" onclick="DelSubmit(); return confirm('@Html.Raw(Resources.DefaultResource.DelMessage)'); ">
                                <i class="la la-close"></i>
                            </button>
                            @if (Session["RoleID"] != null)
                            {
                                if (Session["RoleID"].ToString() == BOL.DataModel.Inventory_ManagerRole.ToString())
                                {
                                    <button type="button" class="btn btn-sm btn-icon btn-outline-primary btn-icon-md" id="Showbtn" data-toggle="kt-tooltip" title="@Html.Raw(Resources.DefaultResource.ViewFile)">

                                        <i class="fa fa-eye"></i>
                                        @*<span class="kt-nav__link-text">   </span>*@
                                    </button>
                                 }
                }
                        </td>


                    </tr>
}
                                }

                    </table>}
                        </div>
                    </div>

</div>
</div>
</div>
        @* End of First Source items *@
        @* second target items *@

        @* End of second target items *@

    </div>
</div>
<div id="showmodal" class="modal fade" tabindex="-1" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document" style="max-width :70%">


    </div>
</div>
}
@*for Valiadtion*@
@*<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>*@
@*<script defer src="~/Scripts/jquery.min.js"></script>*@
<script defer src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
@*<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>*@
@section scripts
    {
    <script type="text/javascript">




        $(function () {

            $("#LocationId").select2();
            $("#DeptId").select2();
            $("#SelItemId").select2();
            $("#StoreId").select2();


            //$("#RoomId").select2();
            //$("#ItemId").select2();


        });


       function DelSubmit()
       {

           $('input, select, div').each(function () {

               $(this).removeAttr('required');

           });


       }

         $("#showtable").on("click", "#Showbtn", function ()
        {

             var id = $(this).closest("tr").find("td").eq(0).html();

            $.ajax({
                url: "@Url.Action("ShowOrderDetails", "RequestOutOrders")",
                data: { id: id, StoreId:@(Model.SelectedItem.StoreId != null ? Model.SelectedItem.StoreId:0)},
                success: function (data) {
                    $('#showmodal').modal({ backdrop: 'static', keyboard: false });
                    $("#showmodal .modal-dialog").html(data);
                    $("#showmodal").modal("show");
                }

            });
         });


        $(function () {

            $("#dropDownListdiv").on("change", "select", function () {

                var value = $(this).val();
                var id = $(this).attr("id");
                /* alert(id);*/
                /* if (id != 'ActionType') {*/
                if (id == 'StoreId') {
                    document.getElementById("DisplayMode").value = id;
                    const form = document.getElementById('myform');

                    /* form.action = "LoadData";*/
                    form.name = "submit";
                    form.value = "submit";
                    form.submit();

                }

                /*  setDropDrownList(string type, int value, int SearchType)*/

            });
        });



    </script>
    @*Display message to user*@
    @if (TempData["ErroMessage"] != null)
    {
        <script type="text/javascript">

                              alert('@TempData["ErroMessage"]');

        </script>
    }
}


